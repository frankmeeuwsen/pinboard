{
    "title": "I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered...",
    "description": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>",
    "summary": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>",
    "date": "2018-04-21T05:01:51.000Z",
    "pubdate": "2018-04-21T05:01:51.000Z",
    "pubDate": "2018-04-21T05:01:51.000Z",
    "link": "https://micro.mostrom.eu/2018/04/21/i-started-to.html",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26eeae4d",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Jan Erik Mostr&ouml;m",
        "url": "http://micro.mostrom.eu/"
    },
    "categories": [
        "microblogs"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered..."
    },
    "rss:link": {
        "@": {},
        "#": "https://micro.mostrom.eu/2018/04/21/i-started-to.html"
    },
    "rss:description": {
        "@": {},
        "#": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Sat, 21 Apr 2018 05:01:51 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "microblogs"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://micro.mostrom.eu/"
        },
        "#": "Jan Erik Mostr&ouml;m"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26eeae4d"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "How to Protect Your Privacy on Facebook",
    "description": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy.",
    "summary": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy.",
    "date": "2018-04-20T17:11:49.000Z",
    "pubdate": "2018-04-20T17:11:49.000Z",
    "pubDate": "2018-04-20T17:11:49.000Z",
    "link": "https://www.howtogeek.com/349659/how-to-protect-your-privacy-on-facebook/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26830815",
    "author": "Harry Guinness",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "How-To Geek",
        "url": "http://www.howtogeek.com/"
    },
    "categories": [
        "WORK"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "How to Protect Your Privacy on Facebook"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.howtogeek.com/349659/how-to-protect-your-privacy-on-facebook/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy."
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:11:49 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "WORK"
    },
    "dc:creator": {
        "@": {},
        "#": "Harry Guinness"
    },
    "rss:source": {
        "@": {
            "url": "http://www.howtogeek.com/"
        },
        "#": "How-To Geek"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26830815"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Is Facebook‚Äôs Anti-Abuse System Broken?",
    "description": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>",
    "summary": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>",
    "date": "2018-04-20T17:08:59.000Z",
    "pubdate": "2018-04-20T17:08:59.000Z",
    "pubDate": "2018-04-20T17:08:59.000Z",
    "link": "https://krebsonsecurity.com/2018/04/is-facebooks-anti-abuse-system-broken/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26984404",
    "author": "BrianKrebs",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Krebs on Security",
        "url": "http://krebsonsecurity.com/"
    },
    "categories": [
        "Daily"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Is Facebook‚Äôs Anti-Abuse System Broken?"
    },
    "rss:link": {
        "@": {},
        "#": "https://krebsonsecurity.com/2018/04/is-facebooks-anti-abuse-system-broken/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:08:59 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Daily"
    },
    "dc:creator": {
        "@": {},
        "#": "BrianKrebs"
    },
    "rss:source": {
        "@": {
            "url": "http://krebsonsecurity.com/"
        },
        "#": "Krebs on Security"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26984404"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Je Facebook-data kan gestolen worden door trackers",
    "description": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>",
    "summary": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>",
    "date": "2018-04-20T17:06:23.000Z",
    "pubdate": "2018-04-20T17:06:23.000Z",
    "pubDate": "2018-04-20T17:06:23.000Z",
    "link": "http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e269fb57a",
    "author": "Eveline Meijer",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Numrush",
        "url": "http://numrush.nl/"
    },
    "categories": [
        "WORK"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Je Facebook-data kan gestolen worden door trackers"
    },
    "rss:link": {
        "@": {},
        "#": "http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/"
    },
    "rss:description": {
        "@": {},
        "#": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:06:23 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "WORK"
    },
    "dc:creator": {
        "@": {},
        "#": "Eveline Meijer"
    },
    "rss:source": {
        "@": {
            "url": "http://numrush.nl/"
        },
        "#": "Numrush"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e269fb57a"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Ready Player One is the roadmap to digital dystopia",
    "description": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>",
    "summary": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>",
    "date": "2018-04-20T05:04:21.000Z",
    "pubdate": "2018-04-20T05:04:21.000Z",
    "pubDate": "2018-04-20T05:04:21.000Z",
    "link": "https://www.theverge.com/2018/4/19/17250892/ready-player-one-book-facebook-internet-dystopia",
    "guid": "http://www.inoreader.com/article/3a9c6e7e261339dd",
    "author": "Andy Baio",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Waxy.org",
        "url": "http://waxy.org/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Ready Player One is the roadmap to digital dystopia"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.theverge.com/2018/4/19/17250892/ready-player-one-book-facebook-internet-dystopia"
    },
    "rss:description": {
        "@": {},
        "#": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 05:04:21 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Andy Baio"
    },
    "rss:source": {
        "@": {
            "url": "http://waxy.org/"
        },
        "#": "Waxy.org"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e261339dd"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "The View-Source Web",
    "description": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>",
    "summary": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>",
    "date": "2018-04-19T19:53:48.000Z",
    "pubdate": "2018-04-19T19:53:48.000Z",
    "pubDate": "2018-04-19T19:53:48.000Z",
    "link": "http://inessential.com/2018/04/15/the_view_source_web",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21052b91",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "The View-Source Web"
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/15/the_view_source_web"
    },
    "rss:description": {
        "@": {},
        "#": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:48 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21052b91"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Jason Kottke reminds us that blogging is most certainly not dead, and that there are great blogs out...",
    "description": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>",
    "summary": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>",
    "date": "2018-04-19T19:53:43.000Z",
    "pubdate": "2018-04-19T19:53:43.000Z",
    "pubDate": "2018-04-19T19:53:43.000Z",
    "link": "http://inessential.com/2018/04/16/jason_kottke_reminds_us_that_blogging_is",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21b06b40",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Jason Kottke reminds us that blogging is most certainly not dead, and that there are great blogs out..."
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/16/jason_kottke_reminds_us_that_blogging_is"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:43 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21b06b40"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Now I‚Äôm in a Pickle with this Web Stuff",
    "description": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>",
    "summary": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>",
    "date": "2018-04-19T19:53:24.000Z",
    "pubdate": "2018-04-19T19:53:24.000Z",
    "pubDate": "2018-04-19T19:53:24.000Z",
    "link": "http://inessential.com/2018/04/16/now_im_in_a_pickle_with_this_web_stuff",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21c04502",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Now I‚Äôm in a Pickle with this Web Stuff"
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/16/now_im_in_a_pickle_with_this_web_stuff"
    },
    "rss:description": {
        "@": {},
        "#": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:24 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21c04502"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "It‚Äôs Time for an RSS Revival",
    "description": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:51:00.000Z",
    "pubdate": "2018-04-19T19:51:00.000Z",
    "pubDate": "2018-04-19T19:51:00.000Z",
    "link": "https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2324a50f",
    "author": "Chris Coyier",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "It‚Äôs Time for an RSS Revival"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:51:00 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Chris Coyier"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2324a50f"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Museum of Websites",
    "description": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:50:14.000Z",
    "pubdate": "2018-04-19T19:50:14.000Z",
    "pubDate": "2018-04-19T19:50:14.000Z",
    "link": "https://www.kapwing.com/evolution-of-products",
    "guid": "http://www.inoreader.com/article/3a9c6e7e218039b9",
    "author": "Robin Rendle",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Museum of Websites"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.kapwing.com/evolution-of-products"
    },
    "rss:description": {
        "@": {},
        "#": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:50:14 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Robin Rendle"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e218039b9"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "1 HTML Element + 5 CSS Properties = Magic!",
    "description": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:50:10.000Z",
    "pubdate": "2018-04-19T19:50:10.000Z",
    "pubDate": "2018-04-19T19:50:10.000Z",
    "link": "https://css-tricks.com/1-html-element-5-css-properties-magic/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e218039e4",
    "author": "Ana Tudor",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "1 HTML Element + 5 CSS Properties = Magic!"
    },
    "rss:link": {
        "@": {},
        "#": "https://css-tricks.com/1-html-element-5-css-properties-magic/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:50:10 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Ana Tudor"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e218039e4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "From USENET to Facebook: The second time as farce",
    "description": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:46:06.000Z",
    "pubdate": "2018-04-19T19:46:06.000Z",
    "pubDate": "2018-04-19T19:46:06.000Z",
    "link": "https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce",
    "guid": "http://www.inoreader.com/article/3a9c6e7e20522221",
    "author": "Mike Loukides",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "All - O'Reilly Media",
        "url": "http://radar.oreilly.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "From USENET to Facebook: The second time as farce"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:46:06 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Mike Loukides"
    },
    "rss:source": {
        "@": {
            "url": "http://radar.oreilly.com/"
        },
        "#": "All - O'Reilly Media"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e20522221"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "On Analog Social Media",
    "description": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:38:41.000Z",
    "pubdate": "2018-04-19T19:38:41.000Z",
    "pubDate": "2018-04-19T19:38:41.000Z",
    "link": "http://calnewport.com/blog/2018/03/28/on-analog-social-media/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e36c92536",
    "author": "Study Hacks",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cal Newport &raquo; Blog",
        "url": "http://calnewport.com/"
    },
    "categories": [
        "Abonnementen"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "On Analog Social Media"
    },
    "rss:link": {
        "@": {},
        "#": "http://calnewport.com/blog/2018/03/28/on-analog-social-media/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:38:41 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Abonnementen"
    },
    "dc:creator": {
        "@": {},
        "#": "Study Hacks"
    },
    "rss:source": {
        "@": {
            "url": "http://calnewport.com/"
        },
        "#": "Cal Newport &raquo; Blog"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e36c92536"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Beyond #DeleteFacebook: More Thoughts on Embracing the Social Internet Over Social Media",
    "description": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:33:18.000Z",
    "pubdate": "2018-04-19T19:33:18.000Z",
    "pubDate": "2018-04-19T19:33:18.000Z",
    "link": "http://calnewport.com/blog/2018/03/25/beyond-deletefacebook-more-thoughts-on-embracing-the-social-internet-over-social-media/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e301ff2a4",
    "author": "Study Hacks",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cal Newport &raquo; Blog",
        "url": "http://calnewport.com/"
    },
    "categories": [
        "Abonnementen"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Beyond #DeleteFacebook: More Thoughts on Embracing the Social Internet Over Social Media"
    },
    "rss:link": {
        "@": {},
        "#": "http://calnewport.com/blog/2018/03/25/beyond-deletefacebook-more-thoughts-on-embracing-the-social-internet-over-social-media/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:33:18 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Abonnementen"
    },
    "dc:creator": {
        "@": {},
        "#": "Study Hacks"
    },
    "rss:source": {
        "@": {
            "url": "http://calnewport.com/"
        },
        "#": "Cal Newport &raquo; Blog"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e301ff2a4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Switching From RSS to Apple News Format",
    "description": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>",
    "summary": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>",
    "date": "2018-04-19T14:18:40.000Z",
    "pubdate": "2018-04-19T14:18:40.000Z",
    "pubDate": "2018-04-19T14:18:40.000Z",
    "link": "https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27410708",
    "author": "Michael Tsai",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Michael Tsai",
        "url": "http://mjtsai.com/blog"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Switching From RSS to Apple News Format"
    },
    "rss:link": {
        "@": {},
        "#": "https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:18:40 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Michael Tsai"
    },
    "rss:source": {
        "@": {
            "url": "http://mjtsai.com/blog"
        },
        "#": "Michael Tsai"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27410708"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Drafts 5 Overhauls Note-Taking App With New Themes, Editor Options and Action Features",
    "description": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T14:17:12.000Z",
    "pubdate": "2018-04-19T14:17:12.000Z",
    "pubDate": "2018-04-19T14:17:12.000Z",
    "link": "https://www.macrumors.com/2018/04/19/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27975be2",
    "author": "Tim Hardwick",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "MacRumors: Mac News and Rumors - All Stories",
        "url": "http://www.macrumors.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Drafts 5 Overhauls Note-Taking App With New Themes, Editor Options and Action Features"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.macrumors.com/2018/04/19/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features/"
    },
    "rss:description": {
        "@": {},
        "#": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:17:12 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Tim Hardwick"
    },
    "rss:source": {
        "@": {
            "url": "http://www.macrumors.com/"
        },
        "#": "MacRumors: Mac News and Rumors - All Stories"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27975be2"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Minds Is the Anti-Facebook That Pays You For Your Time",
    "description": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?",
    "summary": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?",
    "date": "2018-04-19T14:16:15.000Z",
    "pubdate": "2018-04-19T14:16:15.000Z",
    "pubDate": "2018-04-19T14:16:15.000Z",
    "link": "https://www.wired.com/story/minds-anti-facebook",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27c2f654",
    "author": "Louise Matsakis",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "WIRED",
        "url": "http://www.wired.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Minds Is the Anti-Facebook That Pays You For Your Time"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/minds-anti-facebook"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:16:15 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Louise Matsakis"
    },
    "rss:source": {
        "@": {
            "url": "http://www.wired.com/"
        },
        "#": "WIRED"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27c2f654"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "How GrubHub Analyzed 4,000 Dishes to Predict Your Next Order",
    "description": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data.",
    "summary": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data.",
    "date": "2018-04-19T10:22:25.000Z",
    "pubdate": "2018-04-19T10:22:25.000Z",
    "pubDate": "2018-04-19T10:22:25.000Z",
    "link": "https://www.wired.com/story/how-grubhub-analyzed-4000-dishes-to-predict-your-next-order",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2bbb2272",
    "author": "Adam Rogers",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "WIRED",
        "url": "http://www.wired.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "How GrubHub Analyzed 4,000 Dishes to Predict Your Next Order"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/how-grubhub-analyzed-4000-dishes-to-predict-your-next-order"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data."
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:25 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Adam Rogers"
    },
    "rss:source": {
        "@": {
            "url": "http://www.wired.com/"
        },
        "#": "WIRED"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2bbb2272"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track",
    "description": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T10:22:18.000Z",
    "pubdate": "2018-04-19T10:22:18.000Z",
    "pubDate": "2018-04-19T10:22:18.000Z",
    "link": "http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2ba483d4",
    "author": "Ayun Halliday",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Open Culture",
        "url": "http://www.openculture.com"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track"
    },
    "rss:link": {
        "@": {},
        "#": "http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html"
    },
    "rss:description": {
        "@": {},
        "#": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:18 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Ayun Halliday"
    },
    "rss:source": {
        "@": {
            "url": "http://www.openculture.com"
        },
        "#": "Open Culture"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2ba483d4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "The Future of Ideas",
    "description": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>",
    "summary": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>",
    "date": "2018-04-19T10:22:11.000Z",
    "pubdate": "2018-04-19T10:22:11.000Z",
    "pubDate": "2018-04-19T10:22:11.000Z",
    "link": "http://kk.org/cooltools/the-future-of-i/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2ba75031",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cool Tools",
        "url": "http://kk.org/cooltools"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "The Future of Ideas"
    },
    "rss:link": {
        "@": {},
        "#": "http://kk.org/cooltools/the-future-of-i/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:11 +0000"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://kk.org/cooltools"
        },
        "#": "Cool Tools"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2ba75031"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T06:44:24.000Z",
        "pubdate": "2018-04-21T06:44:24.000Z",
        "pubDate": "2018-04-21T06:44:24.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 06:44:24 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "[priv] Cat in a Flat Home",
    "description": "Het internet is af. Een AirBnB achtige dienst om een oppas voor je kat te vinden als je op vakantie bent. Ik hou hier van.",
    "summary": "Het internet is af. Een AirBnB achtige dienst om een oppas voor je kat te vinden als je op vakantie bent. Ik hou hier van.",
    "date": "2018-04-20T07:44:07.000Z",
    "pubdate": "2018-04-20T07:44:07.000Z",
    "pubDate": "2018-04-20T07:44:07.000Z",
    "link": "https://nl.catinaflat.com/",
    "guid": "https://nl.catinaflat.com/",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "microlink"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "https://nl.catinaflat.com/"
    },
    "rdf:title": {
        "@": {},
        "#": "[priv] Cat in a Flat Home"
    },
    "dc:date": {
        "@": {},
        "#": "2018-04-20T07:44:07+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "https://nl.catinaflat.com/"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "rdf:description": {
        "@": {},
        "#": "Het internet is af. Een AirBnB achtige dienst om een oppas voor je kat te vinden als je op vakantie bent. Ik hou hier van."
    },
    "dc:subject": {
        "@": {},
        "#": "microlink"
    },
    "dc:source": {
        "@": {},
        "#": "http://pinboard.in/"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:256032ef9143/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": {
                "@": {
                    "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                }
            }
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "[priv] AnswerThePublic.com: nooit meer zonder schrijfinspiratie - Blogtrommel",
    "description": "Er zijn meer online tools om tot inspiratie te komen voor nieuwe blogposts, maar AnswerThePublic is wel √©rg volledig. De moeite waard!",
    "summary": "Er zijn meer online tools om tot inspiratie te komen voor nieuwe blogposts, maar AnswerThePublic is wel √©rg volledig. De moeite waard!",
    "date": "2018-02-26T07:04:37.000Z",
    "pubdate": "2018-02-26T07:04:37.000Z",
    "pubDate": "2018-02-26T07:04:37.000Z",
    "link": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/",
    "guid": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "microlink"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
    },
    "rdf:title": {
        "@": {},
        "#": "[priv] AnswerThePublic.com: nooit meer zonder schrijfinspiratie - Blogtrommel"
    },
    "dc:date": {
        "@": {},
        "#": "2018-02-26T07:04:37+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "rdf:description": {
        "@": {},
        "#": "Er zijn meer online tools om tot inspiratie te komen voor nieuwe blogposts, maar AnswerThePublic is wel √©rg volledig. De moeite waard!"
    },
    "dc:subject": {
        "@": {},
        "#": "microlink"
    },
    "dc:source": {
        "@": {},
        "#": "http://pinboard.in/"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:d57b472fb464/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": {
                "@": {
                    "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                }
            }
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "[priv] Gifmuseum",
    "description": "Ik hou van animated gifs en nog meer als ze een beetje \"out there\" zijn. Het Gifmuseum is dus een prima plek voor me. Zelfs zonder Museum Jaarkaart!",
    "summary": "Ik hou van animated gifs en nog meer als ze een beetje \"out there\" zijn. Het Gifmuseum is dus een prima plek voor me. Zelfs zonder Museum Jaarkaart!",
    "date": "2018-02-23T09:55:10.000Z",
    "pubdate": "2018-02-23T09:55:10.000Z",
    "pubDate": "2018-02-23T09:55:10.000Z",
    "link": "http://gifmuse.io/45/",
    "guid": "http://gifmuse.io/45/",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "microlink"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "http://gifmuse.io/45/"
    },
    "rdf:title": {
        "@": {},
        "#": "[priv] Gifmuseum"
    },
    "dc:date": {
        "@": {},
        "#": "2018-02-23T09:55:10+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "http://gifmuse.io/45/"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "rdf:description": {
        "@": {},
        "#": "Ik hou van animated gifs en nog meer als ze een beetje \"out there\" zijn. Het Gifmuseum is dus een prima plek voor me. Zelfs zonder Museum Jaarkaart!"
    },
    "dc:subject": {
        "@": {},
        "#": "microlink"
    },
    "dc:source": {
        "@": {},
        "#": "http://pinboard.in/"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:92b07a0ecdfa/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": {
                "@": {
                    "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                }
            }
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "IndieWeb ‚Äî Your data. Your web. | Talk at the IndieWeb Hack Day Nuremberg 2016 | Joschi Kuphal",
    "description": null,
    "summary": null,
    "date": "2017-11-17T21:06:48.000Z",
    "pubdate": "2017-11-17T21:06:48.000Z",
    "pubDate": "2017-11-17T21:06:48.000Z",
    "link": "https://jkphl.is/slides/ihdnue2016-en/#1",
    "guid": "https://jkphl.is/slides/ihdnue2016-en/#1",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "leesmap",
        "microlink"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "https://jkphl.is/slides/ihdnue2016-en/#1"
    },
    "rdf:title": {
        "@": {},
        "#": "IndieWeb ‚Äî Your data. Your web. | Talk at the IndieWeb Hack Day Nuremberg 2016 | Joschi Kuphal"
    },
    "dc:date": {
        "@": {},
        "#": "2017-11-17T21:06:48+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "https://jkphl.is/slides/ihdnue2016-en/#1"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "dc:subject": {
        "@": {},
        "#": "leesmap microlink"
    },
    "dc:source": {
        "@": {},
        "#": "http://pinboard.in/"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:b5216c6d6da5/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": [
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:leesmap"
                    }
                },
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                    }
                }
            ]
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "Is W3C Replicating the WordPress Pingback System? ‚Äì WordPress Tavern",
    "description": null,
    "summary": null,
    "date": "2017-11-12T20:48:19.000Z",
    "pubdate": "2017-11-12T20:48:19.000Z",
    "pubDate": "2017-11-12T20:48:19.000Z",
    "link": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system",
    "guid": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "microlink",
        "webmention"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
    },
    "rdf:title": {
        "@": {},
        "#": "Is W3C Replicating the WordPress Pingback System? ‚Äì WordPress Tavern"
    },
    "dc:date": {
        "@": {},
        "#": "2017-11-12T20:48:19+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "dc:subject": {
        "@": {},
        "#": "microlink webmention"
    },
    "dc:source": {
        "@": {},
        "#": "http://pinboard.in/"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:021f363bd02d/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": [
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                    }
                },
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:webmention"
                    }
                }
            ]
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "Learning from the past ‚Äì Colin Walker",
    "description": null,
    "summary": null,
    "date": "2017-11-12T18:58:10.000Z",
    "pubdate": "2017-11-12T18:58:10.000Z",
    "pubDate": "2017-11-12T18:58:10.000Z",
    "link": "https://colinwalker.blog/2017/11/12/learning-from-the-past/",
    "guid": "https://colinwalker.blog/2017/11/12/learning-from-the-past/",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "microlink",
        "leesmap",
        "nlcc"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
    },
    "rdf:title": {
        "@": {},
        "#": "Learning from the past ‚Äì Colin Walker"
    },
    "dc:date": {
        "@": {},
        "#": "2017-11-12T18:58:10+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "dc:subject": {
        "@": {},
        "#": "microlink leesmap nlcc"
    },
    "dc:source": {
        "@": {},
        "#": "http://pinboard.in/"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:1e376cc32649/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": [
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                    }
                },
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:leesmap"
                    }
                },
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:nlcc"
                    }
                }
            ]
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "The Case for RSS ‚Äî MacSparky",
    "description": null,
    "summary": null,
    "date": "2017-11-12T07:27:23.000Z",
    "pubdate": "2017-11-12T07:27:23.000Z",
    "pubDate": "2017-11-12T07:27:23.000Z",
    "link": "https://www.macsparky.com/blog/2017/11/the-case-for-rss",
    "guid": "https://www.macsparky.com/blog/2017/11/the-case-for-rss",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "microlink",
        "rss",
        "trends"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
    },
    "rdf:title": {
        "@": {},
        "#": "The Case for RSS ‚Äî MacSparky"
    },
    "dc:date": {
        "@": {},
        "#": "2017-11-12T07:27:23+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "dc:subject": {
        "@": {},
        "#": "microlink rss trends"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:1fd601268a44/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": [
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                    }
                },
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:rss"
                    }
                },
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:trends"
                    }
                }
            ]
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "Why the Indie Web movement is so important ‚Äì Dan Gillmor",
    "description": null,
    "summary": null,
    "date": "2017-10-16T20:28:05.000Z",
    "pubdate": "2017-10-16T20:28:05.000Z",
    "pubDate": "2017-10-16T20:28:05.000Z",
    "link": "http://dangillmor.com/2014/04/25/indie-web-important/",
    "guid": "http://dangillmor.com/2014/04/25/indie-web-important/",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "microlink"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "http://dangillmor.com/2014/04/25/indie-web-important/"
    },
    "rdf:title": {
        "@": {},
        "#": "Why the Indie Web movement is so important ‚Äì Dan Gillmor"
    },
    "dc:date": {
        "@": {},
        "#": "2017-10-16T20:28:05+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "http://dangillmor.com/2014/04/25/indie-web-important/"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "dc:subject": {
        "@": {},
        "#": "microlink"
    },
    "dc:source": {
        "@": {},
        "#": "http://pinboard.in/"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:4c0aaf8d26f5/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": {
                "@": {
                    "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                }
            }
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "California Typewriter Documentary",
    "description": "Note to self. Ik wil deze docu zien. Want typemachines.",
    "summary": "Note to self. Ik wil deze docu zien. Want typemachines.",
    "date": "2017-10-16T20:23:02.000Z",
    "pubdate": "2017-10-16T20:23:02.000Z",
    "pubDate": "2017-10-16T20:23:02.000Z",
    "link": "http://californiatypewritermovie.com/",
    "guid": "http://californiatypewritermovie.com/",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "microlink"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "http://californiatypewritermovie.com/"
    },
    "rdf:title": {
        "@": {},
        "#": "California Typewriter Documentary"
    },
    "dc:date": {
        "@": {},
        "#": "2017-10-16T20:23:02+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "http://californiatypewritermovie.com/"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "rdf:description": {
        "@": {},
        "#": "Note to self. Ik wil deze docu zien. Want typemachines."
    },
    "dc:subject": {
        "@": {},
        "#": "microlink"
    },
    "dc:source": {
        "@": {},
        "#": "http://pinboard.in/"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:b3cb1781b9a8/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": {
                "@": {
                    "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                }
            }
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "So long Disqus, hello Webmention",
    "description": null,
    "summary": null,
    "date": "2017-10-08T20:17:57.000Z",
    "pubdate": "2017-10-08T20:17:57.000Z",
    "pubDate": "2017-10-08T20:17:57.000Z",
    "link": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html",
    "guid": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html",
    "author": "frankmeeuwsen",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {},
    "categories": [
        "microlink",
        "leesmap"
    ],
    "enclosures": [],
    "rdf:@": {
        "about": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
    },
    "rdf:title": {
        "@": {},
        "#": "So long Disqus, hello Webmention"
    },
    "dc:date": {
        "@": {},
        "#": "2017-10-08T20:17:57+00:00"
    },
    "rdf:link": {
        "@": {},
        "#": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
    },
    "dc:creator": {
        "@": {},
        "#": "frankmeeuwsen"
    },
    "dc:subject": {
        "@": {},
        "#": "microlink leesmap"
    },
    "dc:source": {
        "@": {},
        "#": "http://pinboard.in/"
    },
    "dc:identifier": {
        "@": {},
        "#": "http://pinboard.in/u:frankmeeuwsen/b:3b2b3946b58a/"
    },
    "taxo:topics": {
        "@": {},
        "bag": {
            "@": {},
            "li": [
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:microlink"
                    }
                },
                {
                    "@": {
                        "resource": "http://pinboard.in/u:frankmeeuwsen/t:leesmap"
                    }
                }
            ]
        }
    },
    "meta": {
        "#ns": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "@": [
            {
                "xmlns": "http://purl.org/rss/1.0/"
            },
            {
                "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            },
            {
                "xmlns:content": "http://purl.org/rss/1.0/modules/content/"
            },
            {
                "xmlns:taxo": "http://purl.org/rss/1.0/modules/taxonomy/"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            },
            {
                "xmlns:cc": "http://web.resource.org/cc/"
            },
            {
                "xmlns:syn": "http://purl.org/rss/1.0/modules/syndication/"
            },
            {
                "xmlns:admin": "http://webns.net/mvcb/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "UTF-8"
        },
        "#type": "rdf",
        "#version": "1.0",
        "title": "Pinboard (frankmeeuwsen)",
        "description": "recent bookmarks from frankmeeuwsen",
        "date": null,
        "pubdate": null,
        "pubDate": null,
        "link": "https://pinboard.in/u:frankmeeuwsen/",
        "xmlurl": null,
        "xmlUrl": null,
        "author": null,
        "language": null,
        "favicon": null,
        "copyright": null,
        "generator": null,
        "cloud": {},
        "image": {},
        "categories": [],
        "rdf:@": {
            "about": "http://pinboard.in"
        },
        "rdf:title": {
            "@": {},
            "#": "Pinboard (frankmeeuwsen)"
        },
        "rdf:link": {
            "@": {},
            "#": "https://pinboard.in/u:frankmeeuwsen/"
        },
        "rdf:description": {
            "@": {},
            "#": "recent bookmarks from frankmeeuwsen"
        },
        "rdf:items": {
            "@": {},
            "seq": {
                "@": {},
                "li": [
                    {
                        "@": {
                            "resource": "https://nl.catinaflat.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.blogtrommel.com/answerthepublic-com-schrijfinspiratie/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://gifmuse.io/45/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://jkphl.is/slides/ihdnue2016-en/#1"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://wptavern.com/is-w3c-replicating-the-wordpress-pingback-system"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://colinwalker.blog/2017/11/12/learning-from-the-past/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://www.macsparky.com/blog/2017/11/the-case-for-rss"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://dangillmor.com/2014/04/25/indie-web-important/"
                        }
                    },
                    {
                        "@": {
                            "resource": "http://californiatypewritermovie.com/"
                        }
                    },
                    {
                        "@": {
                            "resource": "https://nicolas-hoizey.com/2017/07/so-long-disqus-hello-webmentions.html"
                        }
                    }
                ]
            }
        }
    }
}{
    "title": "I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered...",
    "description": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>",
    "summary": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>",
    "date": "2018-04-21T05:01:51.000Z",
    "pubdate": "2018-04-21T05:01:51.000Z",
    "pubDate": "2018-04-21T05:01:51.000Z",
    "link": "https://micro.mostrom.eu/2018/04/21/i-started-to.html",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26eeae4d",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Jan Erik Mostr&ouml;m",
        "url": "http://micro.mostrom.eu/"
    },
    "categories": [
        "microblogs"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered..."
    },
    "rss:link": {
        "@": {},
        "#": "https://micro.mostrom.eu/2018/04/21/i-started-to.html"
    },
    "rss:description": {
        "@": {},
        "#": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Sat, 21 Apr 2018 05:01:51 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "microblogs"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://micro.mostrom.eu/"
        },
        "#": "Jan Erik Mostr&ouml;m"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26eeae4d"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "How to Protect Your Privacy on Facebook",
    "description": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy.",
    "summary": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy.",
    "date": "2018-04-20T17:11:49.000Z",
    "pubdate": "2018-04-20T17:11:49.000Z",
    "pubDate": "2018-04-20T17:11:49.000Z",
    "link": "https://www.howtogeek.com/349659/how-to-protect-your-privacy-on-facebook/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26830815",
    "author": "Harry Guinness",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "How-To Geek",
        "url": "http://www.howtogeek.com/"
    },
    "categories": [
        "WORK"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "How to Protect Your Privacy on Facebook"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.howtogeek.com/349659/how-to-protect-your-privacy-on-facebook/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy."
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:11:49 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "WORK"
    },
    "dc:creator": {
        "@": {},
        "#": "Harry Guinness"
    },
    "rss:source": {
        "@": {
            "url": "http://www.howtogeek.com/"
        },
        "#": "How-To Geek"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26830815"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Is Facebook‚Äôs Anti-Abuse System Broken?",
    "description": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>",
    "summary": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>",
    "date": "2018-04-20T17:08:59.000Z",
    "pubdate": "2018-04-20T17:08:59.000Z",
    "pubDate": "2018-04-20T17:08:59.000Z",
    "link": "https://krebsonsecurity.com/2018/04/is-facebooks-anti-abuse-system-broken/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26984404",
    "author": "BrianKrebs",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Krebs on Security",
        "url": "http://krebsonsecurity.com/"
    },
    "categories": [
        "Daily"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Is Facebook‚Äôs Anti-Abuse System Broken?"
    },
    "rss:link": {
        "@": {},
        "#": "https://krebsonsecurity.com/2018/04/is-facebooks-anti-abuse-system-broken/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:08:59 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Daily"
    },
    "dc:creator": {
        "@": {},
        "#": "BrianKrebs"
    },
    "rss:source": {
        "@": {
            "url": "http://krebsonsecurity.com/"
        },
        "#": "Krebs on Security"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26984404"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Je Facebook-data kan gestolen worden door trackers",
    "description": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>",
    "summary": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>",
    "date": "2018-04-20T17:06:23.000Z",
    "pubdate": "2018-04-20T17:06:23.000Z",
    "pubDate": "2018-04-20T17:06:23.000Z",
    "link": "http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e269fb57a",
    "author": "Eveline Meijer",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Numrush",
        "url": "http://numrush.nl/"
    },
    "categories": [
        "WORK"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Je Facebook-data kan gestolen worden door trackers"
    },
    "rss:link": {
        "@": {},
        "#": "http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/"
    },
    "rss:description": {
        "@": {},
        "#": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:06:23 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "WORK"
    },
    "dc:creator": {
        "@": {},
        "#": "Eveline Meijer"
    },
    "rss:source": {
        "@": {
            "url": "http://numrush.nl/"
        },
        "#": "Numrush"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e269fb57a"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Ready Player One is the roadmap to digital dystopia",
    "description": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>",
    "summary": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>",
    "date": "2018-04-20T05:04:21.000Z",
    "pubdate": "2018-04-20T05:04:21.000Z",
    "pubDate": "2018-04-20T05:04:21.000Z",
    "link": "https://www.theverge.com/2018/4/19/17250892/ready-player-one-book-facebook-internet-dystopia",
    "guid": "http://www.inoreader.com/article/3a9c6e7e261339dd",
    "author": "Andy Baio",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Waxy.org",
        "url": "http://waxy.org/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Ready Player One is the roadmap to digital dystopia"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.theverge.com/2018/4/19/17250892/ready-player-one-book-facebook-internet-dystopia"
    },
    "rss:description": {
        "@": {},
        "#": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 05:04:21 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Andy Baio"
    },
    "rss:source": {
        "@": {
            "url": "http://waxy.org/"
        },
        "#": "Waxy.org"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e261339dd"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "The View-Source Web",
    "description": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>",
    "summary": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>",
    "date": "2018-04-19T19:53:48.000Z",
    "pubdate": "2018-04-19T19:53:48.000Z",
    "pubDate": "2018-04-19T19:53:48.000Z",
    "link": "http://inessential.com/2018/04/15/the_view_source_web",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21052b91",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "The View-Source Web"
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/15/the_view_source_web"
    },
    "rss:description": {
        "@": {},
        "#": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:48 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21052b91"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Jason Kottke reminds us that blogging is most certainly not dead, and that there are great blogs out...",
    "description": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>",
    "summary": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>",
    "date": "2018-04-19T19:53:43.000Z",
    "pubdate": "2018-04-19T19:53:43.000Z",
    "pubDate": "2018-04-19T19:53:43.000Z",
    "link": "http://inessential.com/2018/04/16/jason_kottke_reminds_us_that_blogging_is",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21b06b40",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Jason Kottke reminds us that blogging is most certainly not dead, and that there are great blogs out..."
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/16/jason_kottke_reminds_us_that_blogging_is"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:43 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21b06b40"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Now I‚Äôm in a Pickle with this Web Stuff",
    "description": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>",
    "summary": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>",
    "date": "2018-04-19T19:53:24.000Z",
    "pubdate": "2018-04-19T19:53:24.000Z",
    "pubDate": "2018-04-19T19:53:24.000Z",
    "link": "http://inessential.com/2018/04/16/now_im_in_a_pickle_with_this_web_stuff",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21c04502",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Now I‚Äôm in a Pickle with this Web Stuff"
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/16/now_im_in_a_pickle_with_this_web_stuff"
    },
    "rss:description": {
        "@": {},
        "#": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:24 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21c04502"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "It‚Äôs Time for an RSS Revival",
    "description": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:51:00.000Z",
    "pubdate": "2018-04-19T19:51:00.000Z",
    "pubDate": "2018-04-19T19:51:00.000Z",
    "link": "https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2324a50f",
    "author": "Chris Coyier",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "It‚Äôs Time for an RSS Revival"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:51:00 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Chris Coyier"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2324a50f"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Museum of Websites",
    "description": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:50:14.000Z",
    "pubdate": "2018-04-19T19:50:14.000Z",
    "pubDate": "2018-04-19T19:50:14.000Z",
    "link": "https://www.kapwing.com/evolution-of-products",
    "guid": "http://www.inoreader.com/article/3a9c6e7e218039b9",
    "author": "Robin Rendle",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Museum of Websites"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.kapwing.com/evolution-of-products"
    },
    "rss:description": {
        "@": {},
        "#": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:50:14 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Robin Rendle"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e218039b9"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "1 HTML Element + 5 CSS Properties = Magic!",
    "description": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:50:10.000Z",
    "pubdate": "2018-04-19T19:50:10.000Z",
    "pubDate": "2018-04-19T19:50:10.000Z",
    "link": "https://css-tricks.com/1-html-element-5-css-properties-magic/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e218039e4",
    "author": "Ana Tudor",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "1 HTML Element + 5 CSS Properties = Magic!"
    },
    "rss:link": {
        "@": {},
        "#": "https://css-tricks.com/1-html-element-5-css-properties-magic/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:50:10 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Ana Tudor"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e218039e4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "From USENET to Facebook: The second time as farce",
    "description": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:46:06.000Z",
    "pubdate": "2018-04-19T19:46:06.000Z",
    "pubDate": "2018-04-19T19:46:06.000Z",
    "link": "https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce",
    "guid": "http://www.inoreader.com/article/3a9c6e7e20522221",
    "author": "Mike Loukides",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "All - O'Reilly Media",
        "url": "http://radar.oreilly.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "From USENET to Facebook: The second time as farce"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:46:06 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Mike Loukides"
    },
    "rss:source": {
        "@": {
            "url": "http://radar.oreilly.com/"
        },
        "#": "All - O'Reilly Media"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e20522221"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "On Analog Social Media",
    "description": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:38:41.000Z",
    "pubdate": "2018-04-19T19:38:41.000Z",
    "pubDate": "2018-04-19T19:38:41.000Z",
    "link": "http://calnewport.com/blog/2018/03/28/on-analog-social-media/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e36c92536",
    "author": "Study Hacks",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cal Newport &raquo; Blog",
        "url": "http://calnewport.com/"
    },
    "categories": [
        "Abonnementen"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "On Analog Social Media"
    },
    "rss:link": {
        "@": {},
        "#": "http://calnewport.com/blog/2018/03/28/on-analog-social-media/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:38:41 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Abonnementen"
    },
    "dc:creator": {
        "@": {},
        "#": "Study Hacks"
    },
    "rss:source": {
        "@": {
            "url": "http://calnewport.com/"
        },
        "#": "Cal Newport &raquo; Blog"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e36c92536"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Beyond #DeleteFacebook: More Thoughts on Embracing the Social Internet Over Social Media",
    "description": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:33:18.000Z",
    "pubdate": "2018-04-19T19:33:18.000Z",
    "pubDate": "2018-04-19T19:33:18.000Z",
    "link": "http://calnewport.com/blog/2018/03/25/beyond-deletefacebook-more-thoughts-on-embracing-the-social-internet-over-social-media/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e301ff2a4",
    "author": "Study Hacks",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cal Newport &raquo; Blog",
        "url": "http://calnewport.com/"
    },
    "categories": [
        "Abonnementen"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Beyond #DeleteFacebook: More Thoughts on Embracing the Social Internet Over Social Media"
    },
    "rss:link": {
        "@": {},
        "#": "http://calnewport.com/blog/2018/03/25/beyond-deletefacebook-more-thoughts-on-embracing-the-social-internet-over-social-media/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:33:18 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Abonnementen"
    },
    "dc:creator": {
        "@": {},
        "#": "Study Hacks"
    },
    "rss:source": {
        "@": {
            "url": "http://calnewport.com/"
        },
        "#": "Cal Newport &raquo; Blog"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e301ff2a4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Switching From RSS to Apple News Format",
    "description": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>",
    "summary": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>",
    "date": "2018-04-19T14:18:40.000Z",
    "pubdate": "2018-04-19T14:18:40.000Z",
    "pubDate": "2018-04-19T14:18:40.000Z",
    "link": "https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27410708",
    "author": "Michael Tsai",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Michael Tsai",
        "url": "http://mjtsai.com/blog"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Switching From RSS to Apple News Format"
    },
    "rss:link": {
        "@": {},
        "#": "https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:18:40 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Michael Tsai"
    },
    "rss:source": {
        "@": {
            "url": "http://mjtsai.com/blog"
        },
        "#": "Michael Tsai"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27410708"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Drafts 5 Overhauls Note-Taking App With New Themes, Editor Options and Action Features",
    "description": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T14:17:12.000Z",
    "pubdate": "2018-04-19T14:17:12.000Z",
    "pubDate": "2018-04-19T14:17:12.000Z",
    "link": "https://www.macrumors.com/2018/04/19/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27975be2",
    "author": "Tim Hardwick",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "MacRumors: Mac News and Rumors - All Stories",
        "url": "http://www.macrumors.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Drafts 5 Overhauls Note-Taking App With New Themes, Editor Options and Action Features"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.macrumors.com/2018/04/19/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features/"
    },
    "rss:description": {
        "@": {},
        "#": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:17:12 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Tim Hardwick"
    },
    "rss:source": {
        "@": {
            "url": "http://www.macrumors.com/"
        },
        "#": "MacRumors: Mac News and Rumors - All Stories"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27975be2"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Minds Is the Anti-Facebook That Pays You For Your Time",
    "description": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?",
    "summary": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?",
    "date": "2018-04-19T14:16:15.000Z",
    "pubdate": "2018-04-19T14:16:15.000Z",
    "pubDate": "2018-04-19T14:16:15.000Z",
    "link": "https://www.wired.com/story/minds-anti-facebook",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27c2f654",
    "author": "Louise Matsakis",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "WIRED",
        "url": "http://www.wired.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Minds Is the Anti-Facebook That Pays You For Your Time"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/minds-anti-facebook"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:16:15 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Louise Matsakis"
    },
    "rss:source": {
        "@": {
            "url": "http://www.wired.com/"
        },
        "#": "WIRED"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27c2f654"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "How GrubHub Analyzed 4,000 Dishes to Predict Your Next Order",
    "description": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data.",
    "summary": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data.",
    "date": "2018-04-19T10:22:25.000Z",
    "pubdate": "2018-04-19T10:22:25.000Z",
    "pubDate": "2018-04-19T10:22:25.000Z",
    "link": "https://www.wired.com/story/how-grubhub-analyzed-4000-dishes-to-predict-your-next-order",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2bbb2272",
    "author": "Adam Rogers",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "WIRED",
        "url": "http://www.wired.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "How GrubHub Analyzed 4,000 Dishes to Predict Your Next Order"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/how-grubhub-analyzed-4000-dishes-to-predict-your-next-order"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data."
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:25 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Adam Rogers"
    },
    "rss:source": {
        "@": {
            "url": "http://www.wired.com/"
        },
        "#": "WIRED"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2bbb2272"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track",
    "description": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T10:22:18.000Z",
    "pubdate": "2018-04-19T10:22:18.000Z",
    "pubDate": "2018-04-19T10:22:18.000Z",
    "link": "http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2ba483d4",
    "author": "Ayun Halliday",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Open Culture",
        "url": "http://www.openculture.com"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track"
    },
    "rss:link": {
        "@": {},
        "#": "http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html"
    },
    "rss:description": {
        "@": {},
        "#": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:18 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Ayun Halliday"
    },
    "rss:source": {
        "@": {
            "url": "http://www.openculture.com"
        },
        "#": "Open Culture"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2ba483d4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "The Future of Ideas",
    "description": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>",
    "summary": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>",
    "date": "2018-04-19T10:22:11.000Z",
    "pubdate": "2018-04-19T10:22:11.000Z",
    "pubDate": "2018-04-19T10:22:11.000Z",
    "link": "http://kk.org/cooltools/the-future-of-i/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2ba75031",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cool Tools",
        "url": "http://kk.org/cooltools"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "The Future of Ideas"
    },
    "rss:link": {
        "@": {},
        "#": "http://kk.org/cooltools/the-future-of-i/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:11 +0000"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://kk.org/cooltools"
        },
        "#": "Cool Tools"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2ba75031"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:12:32.000Z",
        "pubdate": "2018-04-21T13:12:32.000Z",
        "pubDate": "2018-04-21T13:12:32.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:12:32 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered...",
    "description": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>",
    "summary": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>",
    "date": "2018-04-21T05:01:51.000Z",
    "pubdate": "2018-04-21T05:01:51.000Z",
    "pubDate": "2018-04-21T05:01:51.000Z",
    "link": "https://micro.mostrom.eu/2018/04/21/i-started-to.html",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26eeae4d",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Jan Erik Mostr&ouml;m",
        "url": "http://micro.mostrom.eu/"
    },
    "categories": [
        "microblogs"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered..."
    },
    "rss:link": {
        "@": {},
        "#": "https://micro.mostrom.eu/2018/04/21/i-started-to.html"
    },
    "rss:description": {
        "@": {},
        "#": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Sat, 21 Apr 2018 05:01:51 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "microblogs"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://micro.mostrom.eu/"
        },
        "#": "Jan Erik Mostr&ouml;m"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26eeae4d"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "How to Protect Your Privacy on Facebook",
    "description": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy.",
    "summary": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy.",
    "date": "2018-04-20T17:11:49.000Z",
    "pubdate": "2018-04-20T17:11:49.000Z",
    "pubDate": "2018-04-20T17:11:49.000Z",
    "link": "https://www.howtogeek.com/349659/how-to-protect-your-privacy-on-facebook/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26830815",
    "author": "Harry Guinness",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "How-To Geek",
        "url": "http://www.howtogeek.com/"
    },
    "categories": [
        "WORK"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "How to Protect Your Privacy on Facebook"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.howtogeek.com/349659/how-to-protect-your-privacy-on-facebook/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy."
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:11:49 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "WORK"
    },
    "dc:creator": {
        "@": {},
        "#": "Harry Guinness"
    },
    "rss:source": {
        "@": {
            "url": "http://www.howtogeek.com/"
        },
        "#": "How-To Geek"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26830815"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Is Facebook‚Äôs Anti-Abuse System Broken?",
    "description": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>",
    "summary": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>",
    "date": "2018-04-20T17:08:59.000Z",
    "pubdate": "2018-04-20T17:08:59.000Z",
    "pubDate": "2018-04-20T17:08:59.000Z",
    "link": "https://krebsonsecurity.com/2018/04/is-facebooks-anti-abuse-system-broken/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26984404",
    "author": "BrianKrebs",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Krebs on Security",
        "url": "http://krebsonsecurity.com/"
    },
    "categories": [
        "Daily"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Is Facebook‚Äôs Anti-Abuse System Broken?"
    },
    "rss:link": {
        "@": {},
        "#": "https://krebsonsecurity.com/2018/04/is-facebooks-anti-abuse-system-broken/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:08:59 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Daily"
    },
    "dc:creator": {
        "@": {},
        "#": "BrianKrebs"
    },
    "rss:source": {
        "@": {
            "url": "http://krebsonsecurity.com/"
        },
        "#": "Krebs on Security"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26984404"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Je Facebook-data kan gestolen worden door trackers",
    "description": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>",
    "summary": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>",
    "date": "2018-04-20T17:06:23.000Z",
    "pubdate": "2018-04-20T17:06:23.000Z",
    "pubDate": "2018-04-20T17:06:23.000Z",
    "link": "http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e269fb57a",
    "author": "Eveline Meijer",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Numrush",
        "url": "http://numrush.nl/"
    },
    "categories": [
        "WORK"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Je Facebook-data kan gestolen worden door trackers"
    },
    "rss:link": {
        "@": {},
        "#": "http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/"
    },
    "rss:description": {
        "@": {},
        "#": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:06:23 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "WORK"
    },
    "dc:creator": {
        "@": {},
        "#": "Eveline Meijer"
    },
    "rss:source": {
        "@": {
            "url": "http://numrush.nl/"
        },
        "#": "Numrush"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e269fb57a"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Ready Player One is the roadmap to digital dystopia",
    "description": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>",
    "summary": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>",
    "date": "2018-04-20T05:04:21.000Z",
    "pubdate": "2018-04-20T05:04:21.000Z",
    "pubDate": "2018-04-20T05:04:21.000Z",
    "link": "https://www.theverge.com/2018/4/19/17250892/ready-player-one-book-facebook-internet-dystopia",
    "guid": "http://www.inoreader.com/article/3a9c6e7e261339dd",
    "author": "Andy Baio",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Waxy.org",
        "url": "http://waxy.org/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Ready Player One is the roadmap to digital dystopia"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.theverge.com/2018/4/19/17250892/ready-player-one-book-facebook-internet-dystopia"
    },
    "rss:description": {
        "@": {},
        "#": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 05:04:21 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Andy Baio"
    },
    "rss:source": {
        "@": {
            "url": "http://waxy.org/"
        },
        "#": "Waxy.org"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e261339dd"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "The View-Source Web",
    "description": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>",
    "summary": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>",
    "date": "2018-04-19T19:53:48.000Z",
    "pubdate": "2018-04-19T19:53:48.000Z",
    "pubDate": "2018-04-19T19:53:48.000Z",
    "link": "http://inessential.com/2018/04/15/the_view_source_web",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21052b91",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "The View-Source Web"
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/15/the_view_source_web"
    },
    "rss:description": {
        "@": {},
        "#": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:48 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21052b91"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Jason Kottke reminds us that blogging is most certainly not dead, and that there are great blogs out...",
    "description": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>",
    "summary": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>",
    "date": "2018-04-19T19:53:43.000Z",
    "pubdate": "2018-04-19T19:53:43.000Z",
    "pubDate": "2018-04-19T19:53:43.000Z",
    "link": "http://inessential.com/2018/04/16/jason_kottke_reminds_us_that_blogging_is",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21b06b40",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Jason Kottke reminds us that blogging is most certainly not dead, and that there are great blogs out..."
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/16/jason_kottke_reminds_us_that_blogging_is"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:43 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21b06b40"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Now I‚Äôm in a Pickle with this Web Stuff",
    "description": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>",
    "summary": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>",
    "date": "2018-04-19T19:53:24.000Z",
    "pubdate": "2018-04-19T19:53:24.000Z",
    "pubDate": "2018-04-19T19:53:24.000Z",
    "link": "http://inessential.com/2018/04/16/now_im_in_a_pickle_with_this_web_stuff",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21c04502",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Now I‚Äôm in a Pickle with this Web Stuff"
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/16/now_im_in_a_pickle_with_this_web_stuff"
    },
    "rss:description": {
        "@": {},
        "#": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:24 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21c04502"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "It‚Äôs Time for an RSS Revival",
    "description": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:51:00.000Z",
    "pubdate": "2018-04-19T19:51:00.000Z",
    "pubDate": "2018-04-19T19:51:00.000Z",
    "link": "https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2324a50f",
    "author": "Chris Coyier",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "It‚Äôs Time for an RSS Revival"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:51:00 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Chris Coyier"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2324a50f"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Museum of Websites",
    "description": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:50:14.000Z",
    "pubdate": "2018-04-19T19:50:14.000Z",
    "pubDate": "2018-04-19T19:50:14.000Z",
    "link": "https://www.kapwing.com/evolution-of-products",
    "guid": "http://www.inoreader.com/article/3a9c6e7e218039b9",
    "author": "Robin Rendle",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Museum of Websites"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.kapwing.com/evolution-of-products"
    },
    "rss:description": {
        "@": {},
        "#": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:50:14 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Robin Rendle"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e218039b9"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "1 HTML Element + 5 CSS Properties = Magic!",
    "description": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:50:10.000Z",
    "pubdate": "2018-04-19T19:50:10.000Z",
    "pubDate": "2018-04-19T19:50:10.000Z",
    "link": "https://css-tricks.com/1-html-element-5-css-properties-magic/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e218039e4",
    "author": "Ana Tudor",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "1 HTML Element + 5 CSS Properties = Magic!"
    },
    "rss:link": {
        "@": {},
        "#": "https://css-tricks.com/1-html-element-5-css-properties-magic/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:50:10 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Ana Tudor"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e218039e4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "From USENET to Facebook: The second time as farce",
    "description": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:46:06.000Z",
    "pubdate": "2018-04-19T19:46:06.000Z",
    "pubDate": "2018-04-19T19:46:06.000Z",
    "link": "https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce",
    "guid": "http://www.inoreader.com/article/3a9c6e7e20522221",
    "author": "Mike Loukides",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "All - O'Reilly Media",
        "url": "http://radar.oreilly.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "From USENET to Facebook: The second time as farce"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:46:06 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Mike Loukides"
    },
    "rss:source": {
        "@": {
            "url": "http://radar.oreilly.com/"
        },
        "#": "All - O'Reilly Media"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e20522221"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "On Analog Social Media",
    "description": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:38:41.000Z",
    "pubdate": "2018-04-19T19:38:41.000Z",
    "pubDate": "2018-04-19T19:38:41.000Z",
    "link": "http://calnewport.com/blog/2018/03/28/on-analog-social-media/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e36c92536",
    "author": "Study Hacks",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cal Newport &raquo; Blog",
        "url": "http://calnewport.com/"
    },
    "categories": [
        "Abonnementen"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "On Analog Social Media"
    },
    "rss:link": {
        "@": {},
        "#": "http://calnewport.com/blog/2018/03/28/on-analog-social-media/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:38:41 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Abonnementen"
    },
    "dc:creator": {
        "@": {},
        "#": "Study Hacks"
    },
    "rss:source": {
        "@": {
            "url": "http://calnewport.com/"
        },
        "#": "Cal Newport &raquo; Blog"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e36c92536"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Beyond #DeleteFacebook: More Thoughts on Embracing the Social Internet Over Social Media",
    "description": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:33:18.000Z",
    "pubdate": "2018-04-19T19:33:18.000Z",
    "pubDate": "2018-04-19T19:33:18.000Z",
    "link": "http://calnewport.com/blog/2018/03/25/beyond-deletefacebook-more-thoughts-on-embracing-the-social-internet-over-social-media/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e301ff2a4",
    "author": "Study Hacks",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cal Newport &raquo; Blog",
        "url": "http://calnewport.com/"
    },
    "categories": [
        "Abonnementen"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Beyond #DeleteFacebook: More Thoughts on Embracing the Social Internet Over Social Media"
    },
    "rss:link": {
        "@": {},
        "#": "http://calnewport.com/blog/2018/03/25/beyond-deletefacebook-more-thoughts-on-embracing-the-social-internet-over-social-media/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:33:18 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Abonnementen"
    },
    "dc:creator": {
        "@": {},
        "#": "Study Hacks"
    },
    "rss:source": {
        "@": {
            "url": "http://calnewport.com/"
        },
        "#": "Cal Newport &raquo; Blog"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e301ff2a4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Switching From RSS to Apple News Format",
    "description": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>",
    "summary": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>",
    "date": "2018-04-19T14:18:40.000Z",
    "pubdate": "2018-04-19T14:18:40.000Z",
    "pubDate": "2018-04-19T14:18:40.000Z",
    "link": "https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27410708",
    "author": "Michael Tsai",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Michael Tsai",
        "url": "http://mjtsai.com/blog"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Switching From RSS to Apple News Format"
    },
    "rss:link": {
        "@": {},
        "#": "https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:18:40 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Michael Tsai"
    },
    "rss:source": {
        "@": {
            "url": "http://mjtsai.com/blog"
        },
        "#": "Michael Tsai"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27410708"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Drafts 5 Overhauls Note-Taking App With New Themes, Editor Options and Action Features",
    "description": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T14:17:12.000Z",
    "pubdate": "2018-04-19T14:17:12.000Z",
    "pubDate": "2018-04-19T14:17:12.000Z",
    "link": "https://www.macrumors.com/2018/04/19/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27975be2",
    "author": "Tim Hardwick",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "MacRumors: Mac News and Rumors - All Stories",
        "url": "http://www.macrumors.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Drafts 5 Overhauls Note-Taking App With New Themes, Editor Options and Action Features"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.macrumors.com/2018/04/19/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features/"
    },
    "rss:description": {
        "@": {},
        "#": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:17:12 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Tim Hardwick"
    },
    "rss:source": {
        "@": {
            "url": "http://www.macrumors.com/"
        },
        "#": "MacRumors: Mac News and Rumors - All Stories"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27975be2"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Minds Is the Anti-Facebook That Pays You For Your Time",
    "description": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?",
    "summary": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?",
    "date": "2018-04-19T14:16:15.000Z",
    "pubdate": "2018-04-19T14:16:15.000Z",
    "pubDate": "2018-04-19T14:16:15.000Z",
    "link": "https://www.wired.com/story/minds-anti-facebook",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27c2f654",
    "author": "Louise Matsakis",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "WIRED",
        "url": "http://www.wired.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Minds Is the Anti-Facebook That Pays You For Your Time"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/minds-anti-facebook"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:16:15 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Louise Matsakis"
    },
    "rss:source": {
        "@": {
            "url": "http://www.wired.com/"
        },
        "#": "WIRED"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27c2f654"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "How GrubHub Analyzed 4,000 Dishes to Predict Your Next Order",
    "description": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data.",
    "summary": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data.",
    "date": "2018-04-19T10:22:25.000Z",
    "pubdate": "2018-04-19T10:22:25.000Z",
    "pubDate": "2018-04-19T10:22:25.000Z",
    "link": "https://www.wired.com/story/how-grubhub-analyzed-4000-dishes-to-predict-your-next-order",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2bbb2272",
    "author": "Adam Rogers",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "WIRED",
        "url": "http://www.wired.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "How GrubHub Analyzed 4,000 Dishes to Predict Your Next Order"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/how-grubhub-analyzed-4000-dishes-to-predict-your-next-order"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data."
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:25 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Adam Rogers"
    },
    "rss:source": {
        "@": {
            "url": "http://www.wired.com/"
        },
        "#": "WIRED"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2bbb2272"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track",
    "description": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T10:22:18.000Z",
    "pubdate": "2018-04-19T10:22:18.000Z",
    "pubDate": "2018-04-19T10:22:18.000Z",
    "link": "http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2ba483d4",
    "author": "Ayun Halliday",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Open Culture",
        "url": "http://www.openculture.com"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track"
    },
    "rss:link": {
        "@": {},
        "#": "http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html"
    },
    "rss:description": {
        "@": {},
        "#": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:18 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Ayun Halliday"
    },
    "rss:source": {
        "@": {
            "url": "http://www.openculture.com"
        },
        "#": "Open Culture"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2ba483d4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "The Future of Ideas",
    "description": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>",
    "summary": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>",
    "date": "2018-04-19T10:22:11.000Z",
    "pubdate": "2018-04-19T10:22:11.000Z",
    "pubDate": "2018-04-19T10:22:11.000Z",
    "link": "http://kk.org/cooltools/the-future-of-i/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2ba75031",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cool Tools",
        "url": "http://kk.org/cooltools"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "The Future of Ideas"
    },
    "rss:link": {
        "@": {},
        "#": "http://kk.org/cooltools/the-future-of-i/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:11 +0000"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://kk.org/cooltools"
        },
        "#": "Cool Tools"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2ba75031"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:19:47.000Z",
        "pubdate": "2018-04-21T13:19:47.000Z",
        "pubDate": "2018-04-21T13:19:47.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:19:47 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered...",
    "description": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>",
    "summary": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>",
    "date": "2018-04-21T05:01:51.000Z",
    "pubdate": "2018-04-21T05:01:51.000Z",
    "pubDate": "2018-04-21T05:01:51.000Z",
    "link": "https://micro.mostrom.eu/2018/04/21/i-started-to.html",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26eeae4d",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Jan Erik Mostr&ouml;m",
        "url": "http://micro.mostrom.eu/"
    },
    "categories": [
        "microblogs"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered..."
    },
    "rss:link": {
        "@": {},
        "#": "https://micro.mostrom.eu/2018/04/21/i-started-to.html"
    },
    "rss:description": {
        "@": {},
        "#": "<p>I started to write a short comment to a post and ‚Ä¶ well, I ended up with something that can‚Äôt be considered ‚Äúshort‚Äù üôÑ. Well, here is a few words about my thoughts on tools for content generation/publishing, and what works for me: <a href=\"https://blog.mostrom.eu/2018/04/20/tools-of-the-trade-2/\">Tools of the trade</a></p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Sat, 21 Apr 2018 05:01:51 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "microblogs"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://micro.mostrom.eu/"
        },
        "#": "Jan Erik Mostr&ouml;m"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26eeae4d"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "How to Protect Your Privacy on Facebook",
    "description": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy.",
    "summary": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy.",
    "date": "2018-04-20T17:11:49.000Z",
    "pubdate": "2018-04-20T17:11:49.000Z",
    "pubDate": "2018-04-20T17:11:49.000Z",
    "link": "https://www.howtogeek.com/349659/how-to-protect-your-privacy-on-facebook/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26830815",
    "author": "Harry Guinness",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "How-To Geek",
        "url": "http://www.howtogeek.com/"
    },
    "categories": [
        "WORK"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "How to Protect Your Privacy on Facebook"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.howtogeek.com/349659/how-to-protect-your-privacy-on-facebook/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://www.howtogeek.com/wp-content/uploads/2018/04/640x295xpreview-9-650x300.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.ZQIEIy43mm.png\" alt=\"640x295xpreview-9-650x300.png.pagespeed.\"></p>In response to the Cambridge Analytica fiasco and the new EU General Data Protection Regulation (GDPR), Facebook has started making it easier for people to control who and what can see and use your data on Facebook. Let‚Äôs take a look at what you can do to protect your privacy."
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:11:49 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "WORK"
    },
    "dc:creator": {
        "@": {},
        "#": "Harry Guinness"
    },
    "rss:source": {
        "@": {
            "url": "http://www.howtogeek.com/"
        },
        "#": "How-To Geek"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26830815"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Is Facebook‚Äôs Anti-Abuse System Broken?",
    "description": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>",
    "summary": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>",
    "date": "2018-04-20T17:08:59.000Z",
    "pubdate": "2018-04-20T17:08:59.000Z",
    "pubDate": "2018-04-20T17:08:59.000Z",
    "link": "https://krebsonsecurity.com/2018/04/is-facebooks-anti-abuse-system-broken/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e26984404",
    "author": "BrianKrebs",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Krebs on Security",
        "url": "http://krebsonsecurity.com/"
    },
    "categories": [
        "Daily"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Is Facebook‚Äôs Anti-Abuse System Broken?"
    },
    "rss:link": {
        "@": {},
        "#": "https://krebsonsecurity.com/2018/04/is-facebooks-anti-abuse-system-broken/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><strong>Facebook</strong> has built some of the most advanced algorithms for tracking users, but when it comes to acting on user abuse reports about Facebook groups and content that clearly violate the company‚Äôs ‚Äúcommunity standards,‚Äù the social media giant‚Äôs technology appears to be woefully inadequate.</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fbtd.png\" alt=\"\" width=\"266\" height=\"227\">Last week, Facebook <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">deleted almost 120 groups</a> totaling more than 300,000 members. The groups were mostly closed ‚Äî requiring approval from group administrators before outsiders could view the day-to-day postings of group members.</p> \n<p>However, the titles, images and postings available on each group‚Äôs front page left little doubt about their true purpose: Selling everything from stolen credit cards, identities and hacked accounts to services that help automate things like spamming, phishing and denial-of-service attacks for hire.</p> \n<p>To its credit, Facebook deleted the groups within just a few hours of KrebsOnSecurity sharing via email a spreadsheet detailing each group, which concluded that the average length of time the groups had been active on Facebook was two years. But I suspect that the company took this extraordinary step mainly because I informed them that I intended to write about the proliferation of cybercrime-based groups on Facebook.</p> \n<p>That story, <a href=\"https://krebsonsecurity.com/2018/04/deleted-facebook-cybercrime-groups-had-300000-members/\">Deleted Facebook Cybercrime Groups had 300,000 Members</a>, ended with a statement from Facebook promising to crack down on such activity and instructing users on how to report groups that violate it its community standards.</p> \n<p>In short order, some of the groups I reported that were removed re-established themselves within hours of Facebook‚Äôs action. I decided instead of contacting Facebook‚Äôs public relations arm directly that I would report those resurrected groups and others using <a href=\"https://www.facebook.com/help/reportlinks\">Facebook‚Äôs stated process</a>. Roughly two days later I received a series replies saying that Facebook had reviewed my reports but that none of the groups were found to have violated its standards. Here‚Äôs a snippet from those replies:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/fb-sorry.png\" alt=\"\" width=\"408\" height=\"927\"></p> \n<p>Perhaps I should give Facebook the benefit of the doubt: Maybe my multiple reports one after the other triggered some kind of anti-abuse feature that is designed to throttle those who would seek to abuse it to get otherwise legitimate groups taken offline ‚Äî much in the way that pools of automated bot accounts have been known to abuse Twitter‚Äôs reporting system to successfully sideline accounts of specific targets.</p> \n<p>Or it could be that I simply didn‚Äôt click the proper sequence of buttons when reporting these groups. The closest match I could find in Facebook‚Äôs abuse reporting system were, ‚ÄúDoesn‚Äôt belong on Facebook,‚Äù and ‚ÄúPurchase or sale of drugs, guns or regulated products.‚Äù There was/is no option for ‚Äúselling hacked accounts, credit cards and identities,‚Äù or anything of that sort.</p> \n<p>In any case, one thing seems clear: Naming and shaming these shady Facebook groups via <strong>Twitter</strong> seems to work better right now for getting them removed from Facebook than using Facebook‚Äôs own formal abuse reporting process. So that‚Äôs what I did on Thursday. Here‚Äôs an example:<span></span></p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/carderx.png\" alt=\"\" width=\"574\" height=\"693\"></p> \n<p>Within minutes of my <a href=\"https://twitter.com/briankrebs/status/986986606149144576\">tweeting about this</a>, the group was gone. I also <a href=\"https://twitter.com/briankrebs/status/986986887716966403\">tweeted about ‚ÄúBest of the Best,‚Äù</a> which was selling accounts from many different e-commerce vendors, including Amazon and eBay:</p> \n<p><img src=\"https://krebsonsecurity.com/wp-content/uploads/2018/04/accountsforsale.png\" alt=\"\" width=\"594\" height=\"623\"></p> \n<p>That group, too, was nixed shortly after my tweet. And so it went for other groups I mentioned in my tweetstorm today. But in response to that flurry of tweets about abusive groups on Facebook, I heard from dozens of other Twitter users who said they‚Äôd received the same ‚Äúdoes not violate our community standards‚Äù reply from Facebook after reporting other groups that clearly flouted the company‚Äôs standards.</p> \n<p><strong>Pete Voss</strong>, Facebook‚Äôs communications manager, apologized for the oversight.</p> \n<p>‚ÄúWe‚Äôre sorry about this mistake,‚Äù Voss said. ‚ÄúNot removing this material was an error and we removed it as soon as we investigated. Our team processes millions of reports each week, and sometimes we get things wrong. We are reviewing this case specifically, including the user‚Äôs reporting options, and we are taking steps to improve the experience, which could include broadening the scope of categories to choose from.‚Äù</p> \n<p>Facebook CEO and founder <strong>Mark Zuckerberg</strong> testified before Congress last week in response to allegations that the company wasn‚Äôt doing enough to halt the abuse of its platform for things like fake news, hate speech and terrorist content. <a href=\"https://www.technologyreview.com/s/610860/three-problems-with-facebooks-plan-to-kill-hate-speech-using-ai/\">It emerged</a> that Facebook already employs 15,000 human moderators to screen and remove offensive content, and that it plans to hire another 5,000 by the end of this year.</p> \n<p>‚ÄúBut right now, those moderators can only react to posts Facebook users have flagged,‚Äù writes <strong>Will Knight</strong>, for Technologyreview.com.</p> \n<p>Zuckerberg told lawmakers that Facebook hopes expected advances in artificial intelligence or ‚ÄúAI‚Äù technology will soon help the social network do a better job self-policing against abusive content. But for the time being, as long as Facebook mainly acts on abuse reports only when it is publicly pressured to do so by lawmakers or people with hundreds of thousands of followers, the company will continue to be dogged by a perception that doing otherwise is simply bad for its business model.</p> \n<p><strong>Update, 1:32 p.m. ET:</strong> Several readers pointed my attention to a Huffington Post story just three days ago, ‚Äú<a href=\"https://www.huffingtonpost.com/entry/i-was-sexually-harassed-on-facebook_us_5a919efae4b0ee6416a3be76\">Facebook Didn‚Äôt Seem To Care I Was Being Sexually Harassed Until I Decided To Write About It</a>,‚Äù about a journalist whose reports of extreme personal harassment on Facebook were met with a similar response about not violating the company‚Äôs Community Standards. That is, until she told Facebook that she planned to write about it.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:08:59 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Daily"
    },
    "dc:creator": {
        "@": {},
        "#": "BrianKrebs"
    },
    "rss:source": {
        "@": {
            "url": "http://krebsonsecurity.com/"
        },
        "#": "Krebs on Security"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e26984404"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Je Facebook-data kan gestolen worden door trackers",
    "description": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>",
    "summary": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>",
    "date": "2018-04-20T17:06:23.000Z",
    "pubdate": "2018-04-20T17:06:23.000Z",
    "pubDate": "2018-04-20T17:06:23.000Z",
    "link": "http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e269fb57a",
    "author": "Eveline Meijer",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Numrush",
        "url": "http://numrush.nl/"
    },
    "categories": [
        "WORK"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Je Facebook-data kan gestolen worden door trackers"
    },
    "rss:link": {
        "@": {},
        "#": "http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/"
    },
    "rss:description": {
        "@": {},
        "#": "<img width=\"540\" height=\"240\" src=\"http://s.numrush.nl/wp-content/uploads/2017/01/20160202040638747140-540x240.png\" alt=\"Facebook Video\"><br><p>Facebook doet onderzoek naar een beveiligingsrapport waarin onthuld wordt dat je Facebook-data gestolen kan worden door JavaScript-trackers. Daarvoor moeten de trackers wel in een website waarmee je kunt inloggen met Facebook geplaatst worden. Dat meldt <a href=\"https://techcrunch.com/2018/04/18/login-with-facebook-data-hijacked-by-javascript-trackers/\">TechCrunch</a>.</p> \n<p>De tracker kan niet alleen je naam en e-mailadres stelen, maar ook hoe oud je bent, welk geslacht je hebt en mogelijk je profielfoto. Dit hangt echter af van hoeveel toegang je de website geeft tot jouw gegevens.</p> \n<p>De tracker verzamelt je informatie zodra je inlogt. Dit gebeurt dus met JavaScript, een programmeertaal die veel op het internet gebruikt wordt. Wat er precies met de data gedaan wordt, is onbekend.</p> \n<h2>Directe overtreding</h2> \n<p>De kwetsbaarheid werd ontdekt door Freedom to Tinker, een website van het Princeton Center for Information Technology Policy. De website plaatste 431 websites met malafide code die voorkomen in de top miljoen websites.</p> \n<p>Een woordvoerder van Facebook stelt dat het verzamelen van gebruikersdata een directe overtreding van de voorwaarden is. ‚ÄúTerwijl we dit probleem onderzoeken, hebben we direct actie ondernomen door de mogelijkheid voor specifieke apps om unieke gebruikersID‚Äôs (waarmee een gebruiker herkend wordt, red.) te linken aan individuele profielpagina‚Äôs geschorst.‚Äù</p> \n<p>Daarnaast werkt het sociale medium aan een extra vorm van authenticatie.</p> \n<h2>Gebrek aan beveiligingsgrenzen</h2> \n<p>Overigens is het verzamelen van gebruikersdata door dit soort trackers geen gevolg van een fout in de login-functie van Facebook zelf. Het is een gevolg van ‚Äúeen gebrek aan beveiligingsgrenzen tussen scripts van een app en van derde partijen op het hedendaagse web.‚Äù</p> \n<p>Lees <a href=\"http://numrush.nl/2018/04/20/je-facebook-data-kan-gestolen-worden-door-trackers/\">Je Facebook-data kan gestolen worden door trackers</a> verder op <a href=\"http://numrush.nl\">Numrush</a></p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 17:06:23 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "WORK"
    },
    "dc:creator": {
        "@": {},
        "#": "Eveline Meijer"
    },
    "rss:source": {
        "@": {
            "url": "http://numrush.nl/"
        },
        "#": "Numrush"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e269fb57a"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Ready Player One is the roadmap to digital dystopia",
    "description": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>",
    "summary": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>",
    "date": "2018-04-20T05:04:21.000Z",
    "pubdate": "2018-04-20T05:04:21.000Z",
    "pubDate": "2018-04-20T05:04:21.000Z",
    "link": "https://www.theverge.com/2018/4/19/17250892/ready-player-one-book-facebook-internet-dystopia",
    "guid": "http://www.inoreader.com/article/3a9c6e7e261339dd",
    "author": "Andy Baio",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Waxy.org",
        "url": "http://waxy.org/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Ready Player One is the roadmap to digital dystopia"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.theverge.com/2018/4/19/17250892/ready-player-one-book-facebook-internet-dystopia"
    },
    "rss:description": {
        "@": {},
        "#": "<p><iframe width=\"640\" height=\"390\" src=\"https://www.youtube.com/embed/bLlj_GeKniA?rel=0&amp;\" frameborder=\"0\"></iframe></p><p>the utopian belief that technology would make all voices equal instead of amplifying existing social inequality</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Fri, 20 Apr 2018 05:04:21 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Andy Baio"
    },
    "rss:source": {
        "@": {
            "url": "http://waxy.org/"
        },
        "#": "Waxy.org"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e261339dd"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "The View-Source Web",
    "description": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>",
    "summary": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>",
    "date": "2018-04-19T19:53:48.000Z",
    "pubdate": "2018-04-19T19:53:48.000Z",
    "pubDate": "2018-04-19T19:53:48.000Z",
    "link": "http://inessential.com/2018/04/15/the_view_source_web",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21052b91",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "The View-Source Web"
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/15/the_view_source_web"
    },
    "rss:description": {
        "@": {},
        "#": "<p>A line in Frank Chimero‚Äôs article <a href=\"https://frankchimero.com/writing/everything-easy-is-hard-again/\">Everything Easy Is Hard Again</a>, published a couple months ago, has stuck with me:</p> \n \n<blockquote><p>That breaks my heart, because so much of my start on the web came from being able to see and easily make sense of any site I‚Äôd visit. I had view source, but each year that goes by, it becomes less and less helpful as a way to investigate other people‚Äôs work.</p></blockquote> \n \n<p>One of the ironies of this is that <a href=\"https://en.wikipedia.org/wiki/HTML5\">HTML5</a> makes it easier than ever to make readable, simple HTML. I especially like two things:</p> \n \n<ol><li>Quotes for attribute values are optional (when there are no spaces), and</li> \n<li>There are semantic tags for things where before you had to guess at the author‚Äôs intention. We have <code>header</code>, <code>main</code>, <code>nav</code>, <code>article</code>, and similar now.</li> \n</ol><p>I realized that this blog ‚Äî¬†since it doesn‚Äôt use cookies or JavaScript, since the layout is as straightforward as can be ‚Äî¬†would make a good personal test case. How easy-to-read can I make the HTML?</p> \n \n<p>So I adopted the semantic HTML5 tags, simplified a few things, and now the source is as easy to read as any HTML I‚Äôve ever written.</p> \n \n<p>Lesson learned: the discoverable and understandable web is still do-able ‚Äî¬†it‚Äôs there waiting to be discovered. It just needs some commitment from the people who make websites.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:48 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21052b91"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Jason Kottke reminds us that blogging is most certainly not dead, and that there are great blogs out...",
    "description": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>",
    "summary": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>",
    "date": "2018-04-19T19:53:43.000Z",
    "pubdate": "2018-04-19T19:53:43.000Z",
    "pubDate": "2018-04-19T19:53:43.000Z",
    "link": "http://inessential.com/2018/04/16/jason_kottke_reminds_us_that_blogging_is",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21b06b40",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Jason Kottke reminds us that blogging is most certainly not dead, and that there are great blogs out..."
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/16/jason_kottke_reminds_us_that_blogging_is"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Jason Kottke <a href=\"https://kottke.org/18/04/blogging-is-most-certainly-not-dead\">reminds us that blogging is most certainly not dead</a>, and that there are great blogs out there.</p> \n \n<p>My only objection is the use of the word ‚Äúdead‚Äù to apply to things that aren‚Äôt alive. Even when you‚Äôre saying that something is not dead.</p> \n \n<p>I‚Äôve done it myself. It‚Äôs shorthand, yes, but it‚Äôs a broad binary take when something more nuanced and true would be warranted.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:43 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21b06b40"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Now I‚Äôm in a Pickle with this Web Stuff",
    "description": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>",
    "summary": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>",
    "date": "2018-04-19T19:53:24.000Z",
    "pubdate": "2018-04-19T19:53:24.000Z",
    "pubDate": "2018-04-19T19:53:24.000Z",
    "link": "http://inessential.com/2018/04/16/now_im_in_a_pickle_with_this_web_stuff",
    "guid": "http://www.inoreader.com/article/3a9c6e7e21c04502",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "inessential",
        "url": "http://inessential.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Now I‚Äôm in a Pickle with this Web Stuff"
    },
    "rss:link": {
        "@": {},
        "#": "http://inessential.com/2018/04/16/now_im_in_a_pickle_with_this_web_stuff"
    },
    "rss:description": {
        "@": {},
        "#": "<p>To publish to this blog, I run a little web server on my Mac that implements the <a href=\"http://xmlrpc.scripting.com/metaWeblogApi.html\">MetaWeblog API</a>, which then renders this blog and rsyncs it to the server. (This way I can write using <a href=\"https://www.red-sweater.com/marsedit/\">MarsEdit</a>.)</p> \n \n<p>What I‚Äôd rather do: run that little web server on the <em>actual</em> server, and do the static-site generation there. That way I can post from my iPhone and iPad, not just from my Mac.</p> \n \n<p>But‚Ä¶ here‚Äôs where web deployment gets tricky. I‚Äôm on an inexpensive shared host plan at DreamHost. The machine is running an older version of Ruby that‚Äôs incompatible with my scripts.</p> \n \n<p>I could use <a href=\"https://rvm.io/\">RVM</a> and <a href=\"https://bundler.io/\">Bundler</a>, I guess, to use the version of Ruby I want to and to install the gems I need. (It‚Äôs just a few, but it‚Äôs more than zero.)</p> \n \n<p>That is, if I could figure out how to use this stuff and get it installed on the server. Looks like something I could spend weeks doing (remember that my hobby coding is limited to nights and weekends).</p> \n \n<p>Alternately, I could get an inexpensive VPS from one of the various providers and set things up there. That <em>might</em> be easier ‚Äî¬†maybe I could skip RVM and Bundler and just install the things I want to use in the old-fashioned way.</p> \n \n<p>But then I have to deal with a bunch of other things myself, including setting up Apache or Nginx. All the things DreamHost does for me automatically I‚Äôll have to handle myself. That doesn‚Äôt sound like fun <em>at all</em>.</p> \n \n<p>I totally don‚Äôt know what to do. It‚Äôs not my plan to become a Ruby deployment expert or to be on the hook for running a server all the time. I‚Äôve done <em>way</em> too much of that kind of thing for one lifetime already, and I‚Äôve mostly been glad to be out of it.</p> \n \n<p>What surprises me is that in 2018 it still requires so much work just to get a CGI script running on a server. It should be easier.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:53:24 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://inessential.com/"
        },
        "#": "inessential"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e21c04502"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "It‚Äôs Time for an RSS Revival",
    "description": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:51:00.000Z",
    "pubdate": "2018-04-19T19:51:00.000Z",
    "pubDate": "2018-04-19T19:51:00.000Z",
    "link": "https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2324a50f",
    "author": "Chris Coyier",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "It‚Äôs Time for an RSS Revival"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Brian Barrett:</p> \n<blockquote><p>Tired of Twitter? Facebook fatigued? It's time to head back to RSS.</p></blockquote> \n<p>I'm an RSS reader lover, so I hate to admit it, but RSS ain't going mainstream. It was too nerdy 20 years ago and it's too nerdy now. RSS is still incredibly useful technology, but I can't see it taking off alone. </p> \n<p>For RSS to take off, it needs some kind of abstraction. Like <a href=\"https://flipboard.com/\">Flipboard</a>, where you can get started reading stuff right away and feeding it RSS isn't something you need to handle manually. Apple News is kinda like that. I'm a little love/hate with Apple News though. I like reading stuff in it, but I've stopped publishing in it because it became too much work to get right and have it look good. It's like managing a second site, unlike RSS which just brainlessly works when your CMS supports it. A little-known feature of Apple News was that it used to be able to function as an RSS reader, but they removed that a couple of years ago. Boooooo.</p> \n<p><span></span></p> \n<p>Podcasts have the right abstraction. People listen through apps that combine discoverability (or at least searchability) with the place you actually subscribe and listen. Ironically, RSS-based.</p> \n<p><a href=\"http://digg.com/\">Digg</a> has been a bit like Flipboard or Apple News: a combination of a very nice RSS reader but also curated content. They've just nuked their reader seemingly out of nowhere though, so clearly something wasn't going well there. There have been so many nukings of RSS readers, it makes you wonder. Is it the XML thing? Could <a href=\"https://jsonfeed.org/\">JSON Feed</a> save it or does that complicate things even more? Is the business model just too hard to crack?</p> \n<p>After the Google Reader shutdown, I had gone with <a href=\"https://feedly.com/\">Feedly</a> for a while. I can't even remember why now, but ultimately something bugged me about it and I ended up going with Digg. I know loads of people really love Feedly though so it's worth a shot for those of you looking for a reader.</p> \n<p>Brian also links up <a href=\"https://theoldreader.com/\">The Old Reader</a> and <a href=\"https://www.inoreader.com/\">Inoreader</a>. Me, I've gone for <a href=\"https://feedbin.com/\">FeedBin</a>. </p> \n<p>Someday, we'll have to throw a feed-sharing party where we can all share our favorite feeds and fill up them readers. This site's is <a href=\"https://css-tricks.com/feed/\">at a predictable URL</a>. Dave Winer also has <a href=\"http://feedbase.io/\">a new project</a> kinda tracking feed popularity. </p> \n<p><a href=\"https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/its-time-for-an-rss-revival/\">It‚Äôs Time for an RSS Revival</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:51:00 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Chris Coyier"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2324a50f"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Museum of Websites",
    "description": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:50:14.000Z",
    "pubdate": "2018-04-19T19:50:14.000Z",
    "pubDate": "2018-04-19T19:50:14.000Z",
    "link": "https://www.kapwing.com/evolution-of-products",
    "guid": "http://www.inoreader.com/article/3a9c6e7e218039b9",
    "author": "Robin Rendle",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Museum of Websites"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.kapwing.com/evolution-of-products"
    },
    "rss:description": {
        "@": {},
        "#": "<p>The team at <a href=\"https://www.kapwing.com/\">Kapwing</a> has collected a lot of images from the Internet Archive‚Äôs <a href=\"https://archive.org/web/web.php\">Wayback Machine</a> and presented a history of how the homepage of popular websites like Google and the New York Times have changed over time. It‚Äôs super interesting.</p> \n<p>I particularly love how Amazon has evolved from a super high information dense webpage that sort of looks like a blog to basically a giant carousel that takes over the whole screen.</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/amazon-wayback-archive.jpg\" alt=\"A screenshot of the Amazon.com homepage from 1999 showing a lot of text next to another screenshot of the homepage in 2018 showing a clean design with a focus on product images.\"><p><a href=\"https://www.kapwing.com/evolution-of-products\" title=\"Direct link to featured article\">Direct Link to Article</a> ‚Äî <a href=\"https://css-tricks.com/museum-of-websites/\">Permalink</a></p><p>The post <a href=\"https://css-tricks.com/museum-of-websites/\">Museum of Websites</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:50:14 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Robin Rendle"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e218039b9"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "1 HTML Element + 5 CSS Properties = Magic!",
    "description": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "summary": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>",
    "date": "2018-04-19T19:50:10.000Z",
    "pubdate": "2018-04-19T19:50:10.000Z",
    "pubDate": "2018-04-19T19:50:10.000Z",
    "link": "https://css-tricks.com/1-html-element-5-css-properties-magic/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e218039e4",
    "author": "Ana Tudor",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "CSS-Tricks",
        "url": "http://css-tricks.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "1 HTML Element + 5 CSS Properties = Magic!"
    },
    "rss:link": {
        "@": {},
        "#": "https://css-tricks.com/1-html-element-5-css-properties-magic/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>Let's say I told you we can get the results below with just one HTML element and five CSS properties for each. No SVG, no images (save for the <code>background</code> on the root that's there just to make clear that our one HTML element has some transparent parts), no JavaScript. What would you think that involves?</p> \n<p><span></span></p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/cap_collage.png\" alt=\"Screenshots. On the left, a screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple). On the right, the XOR operation between what we have on the left and a bunch of concentric ripples. Again, the whole assembly has the same top to bottom gradient.\">The desired results.<p>Well, this article is going to explain just how to do this and then also show how to make things fun by adding in some animation.</p> \n<h3>CSS-ing the Gradient Rays</h3> \n<p>The HTML is just one <code>&lt;div&gt;</code>.</p> \n<pre><code>&lt;div class='rays'&gt;&lt;/div&gt;</code></pre> \n<p>In the CSS, we need to set the dimensions of this element and we need to give it a <code>background</code> so that we can see it. We also make it circular using <code>border-radius</code>:</p> \n<pre><code>.rays { \n  width: 80vmin; height: 80vmin; \n  border-radius: 50%; \n  background: linear-gradient(#b53, #f90); \n}</code></pre> \n<p>And... we've already used up four out of five properties to get the result below:</p> \n<p>See the <a href=\"http://codepen.io/thebabydino/pen/mxxwPv/\">Pen</a> by thebabydino (<a href=\"http://codepen.io/thebabydino\">@thebabydino</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p> \n<p>So what's the fifth? <code>mask</code> with a <code>repeating-conic-gradient()</code> value!</p> \n<p>Let's say we want to have <code>20</code> rays. This means we need to allocate <code>$p: 100%/20</code> of the full circle for a ray and the gap after it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/disc_to_rays_gaps.svg\" alt=\"Illustration. Shows how we slice the disc to divide it into equal rays and gaps.\">Dividing the disc into rays and gaps (<a href=\"https://codepen.io/thebabydino/pen/aYGdgo/\">live</a>).<p>Here we keep the gaps in between rays equal to the rays (so that's <code>.5*$p</code> for either a ray or a space), but we can make either of them wider or narrower. We want an abrupt change after the ending stop position of the opaque part (the ray), so the starting stop position for the transparent part (the gap) should be equal to or smaller than it. So if the ending stop position for the ray is <code>.5*$p</code>, then the starting stop position for the gap can't be bigger. However, it can be smaller and that helps us keep things simple because it means we can simply zero it.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_conic_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating conic gradient.\">How <code>repeating-conic-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRavOj/\">live</a>).<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n \n.rays { \n  /* same as before */ \n  mask: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); \n}</code></pre> \n<p>Note that, unlike for linear and radial gradients, stop positions for conic gradients cannot be unitless. They need to be either percentages or angular values. This means using something like <code>transparent 0 $p</code> doesn't work, we need <code>transparent 0% $p</code> (or <code>0deg</code> instead of <code>0%</code>, it doesn't matter which we pick, it just can't be unitless).</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_pad.png\" alt=\"Screenshot of equal radial slices of a pie with transparent slices (gaps) in between them. The whole assembly has a top to bottom gradient (orange to purple).\">Gradient rays (<a href=\"https://codepen.io/thebabydino/pen/PpxJdP/\">live demo</a>, no Edge support).<p>There are a few things to note here when it comes to support:</p> \n<ul><li>Edge doesn't support masking on HTML elements at this point, though this is listed as <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/\">In Development</a> and a flag for it (that doesn't do anything for now) has already shown up in <code>about:flags</code>.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/caveat_mask_0_edge-an.png\" alt=\"Screenshot showing the about:flags page in Edge, with the 'Enable CSS Masking' flag highlighted.\">The <strong>Enable CSS Masking</strong> flag in Edge.</li> \n<li><a href=\"https://css-tricks.com/snippets/css/css-conic-gradient/\"><code>conic-gradient()</code></a> is only supported natively by Blink browsers behind the <strong>Experimental Web Platform features</strong> flag (which can be enabled from <code>chrome://flags</code> or <code>opera://flags</code>). Support is coming to Safari as well, but, until that happens, Safari still relies on the <a href=\"https://leaverou.github.io/conic-gradient/\">polyfill</a>, just like Firefox.<br><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2017/09/scr_chrome_flag_exp_web_platform.png\" alt=\"Screenshot showing the Experimental Web Platform Features flag being enabled in Chrome.\">The <strong>Experimental Web Platform features</strong> flag enabled in Chrome.</li> \n<li>WebKit browsers still need the <code>-webkit-</code> prefix for <code>mask</code> properties on HTML elements. You'd think that's no problem since we're using the polyfill which relies on <a href=\"https://leaverou.github.io/prefixfree/\">-prefix-free</a> anyway, so, if we use the polyfill, we need to include -prefix-free before that anyway. Sadly, it's a bit more complicated than that. That's because -prefix-free works via feature detection, which fails in this case because all browsers do support <code>mask</code> unprefixed... on SVG elements! But we're using <code>mask</code> on an HTML element here, so we're in the situation where WebKit browsers need the <code>-webkit-</code> prefix, but -prefix-free won't add it. So I guess that means we need to add it  manually: \n<pre><code>$nr: 20; // number of rays \n$p: 100%/$nr; // percent of circle allocated to a ray and gap after \n$m: repeating-conic-gradient(#000 0% .5*$p, transparent 0% $p); // mask \n \n.rays { \n  /* same as before */ \n  -webkit-mask: $m; \n          mask: $m; \n}</code></pre> \n<p>I guess we could also use Autoprefixer, even if we need to include -prefix-free anyway, but using both just for this feels a bit like using a shotgun to kill a fly.</p></li> \n</ul><h4>Adding in Animation</h4> \n<p>One cool thing about <code>conic-gradient()</code> being supported natively in Blink browsers is that we can use CSS variables inside them (we cannot do that when using the polyfill). And CSS variables can now also be animated in Blink browsers with a bit of Houdini magic (we need the <strong>Experimental Web Platform features</strong> flag to be enabled for that, but we also need it enabled for native <code>conic-gradient()</code> support, so that shouldn't be a problem).</p> \n<p>In order to prepare our code for the animation, we change our masking gradient so that it uses variable alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a)) 0% .5*$p,  \n      rgba(#000, calc(1 - var(--a))) 0% $p);</code></pre> \n<p>We then register the alpha <code>--a</code> custom property:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--a',  \n  syntax: '&lt;number&gt;',  \n  initialValue: 1; \n})</code></pre> \n<p>And finally, we add in an <code>animation</code> in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s linear infinite alternate; \n} \n \n@keyframes a { to { --a: 0 } }</code></pre> \n<p>This gives us the following result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the rays go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming rays. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other.\">Ray alpha animation (<a href=\"https://codepen.io/thebabydino/pen/ZxXWGJ/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>Meh. Doesn't look that great. We could however make things more interesting by using multiple alpha values:</p> \n<pre><code>$m: repeating-conic-gradient( \n      rgba(#000, var(--a0)) 0%, rgba(#000, var(--a1)) .5*$p,  \n      rgba(#000, var(--a2)) 0%, rgba(#000, var(--a3)) $p);</code></pre> \n<p>The next step is to register each of these custom properties:</p> \n<pre><code>for(let i = 0; i &lt; 4; i++) { \n  CSS.registerProperty({ \n    name: `--a${i}`,  \n    syntax: '&lt;number&gt;',  \n    initialValue: 1 - ~~(i/2) \n  }) \n}</code></pre> \n<p>And finally, add the animations in the CSS:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: a 2s infinite alternate; \n  animation-name: a0, a1, a2, a3; \n  animation-timing-function:  \n    /* easings from easings.net */ \n    cubic-bezier(.57, .05, .67, .19) /* easeInCubic */,  \n    cubic-bezier(.21, .61, .35, 1); /* easeOutCubic */ \n} \n \n@for $i from 0 to 4 { \n  @keyframes a#{$i} { to { --a#{$i}: #{floor($i/2)} } } \n}</code></pre> \n<p>Note that since we're setting values to custom properties, we <a href=\"https://twitter.com/DavidKPiano/status/979801023844966401\">need to interpolate</a> the <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#floor-instance_method\"><code>floor()</code></a> function.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ray, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ray both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ray alpha animations (<a href=\"https://codepen.io/thebabydino/pen/YaaOpP/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>It now looks a bit more interesting, but surely we can do better?</p> \n<p>Let's try using a CSS variable for the stop position between the ray and the gap:</p> \n<pre><code>$m: repeating-conic-gradient(#000 0% var(--p), transparent 0% $p);</code></pre> \n<p>We then register this variable:</p> \n<pre><code>CSS.registerProperty({ \n  name: '--p',  \n  syntax: '&lt;percentage&gt;',  \n  initialValue: '0%' \n})</code></pre> \n<p>And we animate it from the CSS using a keyframe <code>animation</code>:</p> \n<pre><code>.rays { \n  /* same as before */ \n  animation: p .5s linear infinite alternate \n} \n \n@keyframes p { to { --p: #{$p} } }</code></pre> \n<p>The result is more interesting in this case:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_2.gif\" alt=\"Animated gif. The stop position between the ray an the gap animates from 0 (when the ray is basically reduced to nothing) to the whole percentage $p allocated for a ray and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ray size animation (<a href=\"https://codepen.io/thebabydino/pen/bvMVYN/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<p>But we can still spice it up a bit more by flipping the whole thing horizontally in between every iteration, so that it's always flipped for the reverse ones. This means not flipped when <code>--p</code> goes from <code>0%</code> to <code>$p</code> and flipped when <code>--p</code> goes back from <code>$p</code> to <code>0%</code>.</p> \n<p>The way we flip an element horizontally is by applying a <code>transform: scalex(-1)</code> to it. Since we want this flip to be applied at the end of the first iteration and then removed at the end of the second (reverse) one, we apply it in a keyframe <code>animation</code> as well‚Äîin one with a <code>steps()</code> timing function and double the <code>animation-duration</code>.</p> \n<pre><code> $t: .5s; \n \n.rays { \n  /* same as before */ \n  animation: p $t linear infinite alternate,  \n    s 2*$t steps(1) infinite; \n} \n \n@keyframes p { to { --p: #{$p} } } \n \n@keyframes s { 50% { transform: scalex(-1); } }</code></pre> \n<p>Now we finally have a result that actually looks pretty cool:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/ray_ani_3.gif\" alt=\"Animated gif. We have the same animation as before, plus a horizontal flip at the end of every iteration which creates the illusion of a circular sweep instead of just increasing and then decreasing rays, as the rays seems to now decrease from the start after they got to their maximum size incresing from the end.\">Alternating ray size animation with horizontal flip in between iterations (<a href=\"https://codepen.io/thebabydino/pen/aYLNmK/\">live demo</a>, only works in Blink browsers with the <strong>Experimental Web Platform features</strong> flag enabled).<h3>CSS-ing Gradient Rays and Ripples</h3> \n<p>To get the rays and ripples result, we need to add a second gradient to the <code>mask</code>, this time a <code>repeating-radial-gradient()</code>.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/how_repeat_radial_grad_works.svg\" alt=\"SVG illustration. Connects the stop positions from the code to the actual corresponding points on the circle defining the repeating radial gradient.\">How <code>repeating-radial-gradient()</code> works (<a href=\"https://codepen.io/thebabydino/pen/PRaMBP/\">live</a>).<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000 0% .5*$p, transparent 0% $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>Sadly, <a href=\"https://codepen.io/thebabydino/pen/RMyROz\">using multiple stop positions</a> only works in Blink browsers with the same <strong>Experimental Web Platform features</strong> flag enabled. And while the <code>conic-gradient()</code> polyfill covers this for the <code>repeating-conic-gradient()</code> part in browsers supporting CSS masking on HTML elements, but not supporting conic gradients natively (Firefox, Safari, Blink browsers without the flag enabled), nothing fixes the problem for the <code>repeating-radial-gradient()</code> part in these browsers.</p> \n<p>This means we're forced to have some repetition in our code:</p> \n<pre><code>$nr: 20; \n$p: 100%/$nr; \n$stop-list: #000, #000 .5*$p, transparent 0%, transparent $p; \n$m: repeating-conic-gradient($stop-list),  \n    repeating-radial-gradient(closest-side, $stop-list); \n \n.rays-ripples { \n  /* same as before */ \n  mask: $m; \n}</code></pre> \n<p>We're obviously getting closer, but we're not quite there yet:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_pad.png\" alt=\"Screenshot. We have the same radial slices with equal gaps in between, and over them, a layer of ripples - concentric rings with gaps equal to their width in between them. The whole thing has a top to bottom gradient (orange to purple) with transparent parts where the gaps of the two layers intersect.\">Intermediary result with the two mask layers (<a href=\"https://codepen.io/thebabydino/pen/wmjzGz/\">live demo</a>, no Edge support).<p>To get the result we want, we need to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite\"><code>mask-composite</code></a> property and set it to <code>exclude</code>:</p> \n<pre><code>$m: repeating-conic-gradient($stop-list) exclude,  \n    repeating-radial-gradient(closest-side, $stop-list);</code></pre> \n<p>Note that <code>mask-composite</code> is only supported in Firefox 53+ for now, though Edge <a href=\"https://twitter.com/gregwhitworth/status/979771147330859008\">should join in</a> when it finally supports CSS masking on HTML elements.</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/cap_rays_ripples_xor_pad.png\" alt=\"Screenshot. We have the same result as before, except now we have performed a XOR operation between the two layers (rays and ripples).\">XOR rays and ripples (<a href=\"https://codepen.io/thebabydino/pen/RQBMNw/\">live demo</a>, Firefox 53+ only).<p>If you think it looks like the rays and the gaps between the rays are not equal, you're right. This is due to a polyfill <a href=\"https://github.com/LeaVerou/conic-gradient/issues/22\">issue</a>.</p> \n<h4>Adding in Animation</h4> \n<p>Since <code>mask-composite</code> only works in Firefox for now and Firefox doesn't yet support <code>conic-gradient()</code> natively, we cannot put CSS variables inside the <code>repeating-conic-gradient()</code> (because Firefox still falls back on the polyfill for it and the polyfill doesn't support CSS variable usage). But we can put them inside the <code>repeating-radial-gradient()</code> and even if we cannot animate them with CSS keyframe animations, we can do so with JavaScript!</p> \n<p>Because we're now putting CSS variables inside the <code>repeating-radial-gradient()</code>, but not inside the <code>repeating-conic-gradient()</code> (as the XOR effect only works via <code>mask-composite</code>, which is only supported in Firefox for now and Firefox doesn't support conic gradients natively, so it falls back on the polyfill, which doesn't support CSS variable usage), we cannot use the same <code>$stop-list</code> for both gradient layers of our <code>mask</code> anymore.</p> \n<p>But if we have to rewrite our <code>mask</code> without a common <code>$stop-list</code> anyway, we can take this opportunity to use different stop positions for the two gradients:</p> \n<pre><code>// for conic gradient \n$nc: 20; \n$pc: 100%/$nc; \n// for radial gradient \n$nr: 10; \n$pr: 100%/$nr;</code></pre> \n<p>The CSS variable we animate is an alpha <code>--a</code> one, just like for the first animation in the rays case. We also introduce the <code>--c0</code> and <code>--c1</code> variables because here we cannot have multiple positions per stop and we want to avoid repetition as much as possible:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        var(--c0), var(--c0) .5*$pr,  \n        var(--c1) 0, var(--c1) $pr); \n \nbody { \n  --a: 0; \n  /* layout, backgrounds and other irrelevant stuff */ \n} \n \n.xor { \n  /* same as before */ \n  --c0: #{rgba(#000, var(--a))}; \n  --c1: #{rgba(#000, calc(1 - var(--a)))}; \n  mask: $m; \n}</code></pre> \n<p>The alpha variable <code>--a</code> is the one we animate back and forth (from <code>0</code> to <code>1</code> and then back to <code>0</code> again) with a little bit of vanilla JavaScript. We start by setting a total number of frames <code>NF</code> the animation happens over, a current frame index <code>f</code> and a current animation direction <code>dir</code>:</p> \n<pre><code>const NF = 50; \n \nlet f = 0, dir = 1;</code></pre> \n<p>Within an <code>update()</code> function, we update the current frame index <code>f</code> and then we set the current progress value (<code>f/NF</code>) to the current alpha <code>--a</code>. If <code>f</code> has reached either <code>0</code> of <code>NF</code>, we change the direction. Then the <code>update()</code> function gets called again on the next refresh.</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--a', (f/NF).toFixed(2)); \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>And that's all for the JavaScript! We now have an animated result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_0.gif\" alt=\"Animated gif. We animate the alpha of the gradient stops, such that the ripples go from fully opaque to fully transparent, effectively becoming gaps, while the opposite happens for the initial gaps, they go from fully transparent to fully opaque, thus becoming ripples. At any moment, the alpha of either of them is  1 minus the alpha of the other, so they complement each other. In this case, the animation is linear, the alpha changing at the same rate from start to finish.\">Ripple alpha animation, <code>linear</code> (<a href=\"https://codepen.io/thebabydino/pen/WzJdXO/\">live demo</a>, only works in Firefox 53+).<p>This is a linear animation, the alpha value <code>--a</code> being set to the progress <code>f/NF</code>. But we can change the timing function to something else, as explained in an earlier article I wrote on <a href=\"https://css-tricks.com/emulating-css-timing-functions-javascript/#timing-fn-comparison\">emulating CSS timing functions</a> with JavaScript.</p> \n<p>For example, if we want an <code>ease-in</code> kind of timing function, we set the alpha value to <code>easeIn(f/NF)</code> instead of just <code>f/NF</code>, where we have that <code>easeIn()</code> is:</p> \n<pre><code>function easeIn(k, e = 1.675) { \n  return Math.pow(k, e) \n}</code></pre> \n<p>The result when using an <code>ease-in</code> timing function can be seen in <a href=\"https://codepen.io/thebabydino/pen/EERXVy/\">this Pen</a> (working only in Firefox 53+). If you're interested in how we got this function, it's all explained in the previously linked article on timing functions.</p> \n<p>The exact same approach works for <code>easeOut()</code> or <code>easeInOut()</code>:</p> \n<pre><code>function easeOut(k, e = 1.675) { \n  return 1 - Math.pow(1 - k, e) \n}; \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}</code></pre> \n<p>Since we're using JavaScript anyway, we can make the whole thing interactive, so that the animation only happens on click/tap, for example.</p> \n<p>In order to do so, we add a request ID variable (<code>rID</code>), which is initially <code>null</code>, but then takes the value returned by <code>requestAnimationFrame()</code> in the <code>update()</code> function. This enables us to stop the animation with a <code>stopAni()</code> function whenever we want to:</p> \n<pre><code> /* same as before */ \n \nlet rID = null; \n \nfunction stopAni() { \n  cancelAnimationFrame(rID); \n  rID = null \n}; \n \nfunction update() { \n  /* same as before */ \n   \n  if(!(f%NF)) { \n    stopAni(); \n    return \n  } \n   \n  rID = requestAnimationFrame(update) \n};</code></pre> \n<p>On click, we stop any animation that may be running, reverse the animation direction <code>dir</code> and call the <code>update()</code> function:</p> \n<pre><code>addEventListener('click', e =&gt; { \n  if(rID) stopAni(); \n  dir *= -1; \n  update() \n}, false);</code></pre> \n<p>Since we start with the current frame index <code>f</code> being <code>0</code>, we want to go in the positive direction, towards <code>NF</code> on the first click. And since we're reversing the direction on every click, it results that the initial value for the direction must be <code>-1</code> now so that it gets reversed to <code>+1</code> on the first click.</p> \n<p>The result of all the above can be seen in <a href=\"https://codepen.io/thebabydino/pen/RMJgGy\">this interactive Pen</a> (working only in Firefox 53+).</p> \n<p>We could also use a different alpha variable for each stop, just like we did in the case of the rays:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        rgba(#000, var(--a0)), rgba(#000, var(--a1)) .5*$pr,  \n        rgba(#000, var(--a2)) 0, rgba(#000, var(--a3)) $pr);</code></pre> \n<p>In the JavaScript, we have the <code>ease-in</code> and <code>ease-out</code> timing functions:</p> \n<pre><code>const TFN = { \n  'ease-in': function(k, e = 1.675) { \n    return Math.pow(k, e) \n  },  \n  'ease-out': function(k, e = 1.675) { \n    return 1 - Math.pow(1 - k, e) \n  } \n};</code></pre> \n<p>In the <code>update()</code> function, the only difference from the first animated demo is that we don't change the value of just one CSS variable‚Äîwe now have four to take care of: <code>--a0</code>, <code>--a1</code>, <code>--a2</code>, <code>--a3</code>. We do this within a loop, using the <code>ease-in</code> function for the ones at even indices and the <code>ease-out</code> function for the others. For the first two, the progress is given by <code>f/NF</code>, while for the last two, the progress is given by <code>1 - f/NF</code>. Putting all of this into one formula, we have:</p> \n<pre><code>(function update() { \n  f += dir; \n   \n  for(var i = 0; i &lt; 4; i++) { \n    let j = ~~(i/2); \n\t\t \n    document.body.style.setProperty( \n      `--a${i}`,  \n      TFN[i%2 ? 'ease-out' : 'ease-in'](j + Math.pow(-1, j)*f/NF).toFixed(2) \n    ) \n  } \n\t   \n  if(!(f%NF)) dir *= -1; \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>The result can be seen below:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_1.gif\" alt=\"Animated gif. This time, the alpha of each and every stop (start and end of ripple, start and end of gap) is animated independently via its own CSS variable. The alphas at the start and end of the ripple both go from 1 to 0, but using different timing functions. The alphas at the start and end of the gap both go from 0 to 1, but, again, using different timing functions.\">Multiple ripple alpha animations (<a href=\"https://codepen.io/thebabydino/pen/yKEXQJ/\">live demo</a>, only works in Firefox 53+).<p>Just like for conic gradients, we can also animate the stop position between the opaque and the transparent part of the masking radial gradient. To do so, we use a CSS variable <code>--p</code> for the progress of this stop position:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        #000, #000 calc(var(--p)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>The JavaScript is almost identical to that for the first alpha animation, except we don't update an alpha <code>--a</code> variable, but a stop progress <code>--p</code> variable and we use an <code>ease-in-out</code> kind of function:</p> \n<pre><code>/* same as before */ \n \nfunction easeInOut(k) { \n  return .5*(Math.sin((k - .5)*Math.PI) + 1) \n}; \n \n(function update() { \n  f += dir; \n   \n  document.body.style.setProperty('--p', easeInOut(f/NF).toFixed(2)); \n\t   \n  /* same as before */ \n})();</code></pre> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_2.gif\" alt=\"Animated gif. The stop position between the ripple an the gap animates from 0 (when the ripple is basically reduced to nothing) to the whole percentage $pr allocated for a ripple and the gap following it (which basically means we don't have a gap anymore) and then back to 0 again.\">Alternating ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/aYKLox/\">live demo</a>, only works in Firefox 53+).<p>We can make the effect more interesting if we add a <code>transparent</code> strip before the opaque one and we also animate the progress of the stop position <code>--p0</code> where we go from this <code>transparent</code> strip to the opaque one:</p> \n<pre><code>$m: repeating-conic-gradient(#000 .5*$pc, transparent 0% $pc) exclude,  \n    repeating-radial-gradient(closest-side,  \n        transparent, transparent calc(var(--p0)*#{$pr}),  \n        #000, #000 calc(var(--p1)*#{$pr}),  \n        transparent 0, transparent $pr);</code></pre> \n<p>In the JavaScript, we now need to animate two CSS variables: <code>--p0</code> and <code>--p1</code>. We use an <code>ease-in</code> timing function for the first and an <code>ease-out</code> for the second one. We also don't reverse the animation direction anymore:</p> \n<pre><code>const NF = 120,  \n      TFN = { \n        'ease-in': function(k, e = 1.675) { \n          return Math.pow(k, e) \n        },  \n        'ease-out': function(k, e = 1.675) { \n          return 1 - Math.pow(1 - k, e) \n        } \n      }; \n \nlet f = 0; \n \n(function update() { \n  f = (f + 1)%NF; \n\t \n  for(var i = 0; i &lt; 2; i++) \n    document.body.style.setProperty(`--p${i}`, TFN[i ? 'ease-out' : 'ease-in'](f/NF); \n   \n  requestAnimationFrame(update) \n})();</code></pre> \n<p>This gives us a pretty interesting result:</p> \n<img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/04/xor_ani_3.gif\" alt=\"Animated gif. We now have one extra transparent circular strip before the opaque and transparent ones we previously had. Initially, both the start and end stop positions of this first strip and the following opaque one are 0, so they're both reduced to nothing and the whole space is occupied by the last transparent strip. The end stop positions of both strips then animate from 0 to the whole percentage $pr allocated for one repetition of our radial gradient, but with different timing functions. The end stop position of the first opaque strip animates slowly at first and faster towards the end (ease-in), while the end stop position of the opaque strip animates faster at first and slower towards the end (ease-out). This makes the opaque strip in the middle grow from nothing at first as its end stop position increases faster than that of the first transparent strip (which determines the start stop position of the opaque strip), then shrink back to nothing as its end stop position ends up being equal to $pr, just like the end stop position of the first transparent strip. The whole cycle then repeats itself.\">Double ripple size animation (<a href=\"https://codepen.io/thebabydino/pen/BrVmzG/\">live demo</a>, only works in Firefox 53+).<p>The post <a href=\"https://css-tricks.com/1-html-element-5-css-properties-magic/\">1 HTML Element + 5 CSS Properties = Magic!</a> appeared first on <a href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:50:10 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Ana Tudor"
    },
    "rss:source": {
        "@": {
            "url": "http://css-tricks.com/"
        },
        "#": "CSS-Tricks"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e218039e4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "From USENET to Facebook: The second time as farce",
    "description": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:46:06.000Z",
    "pubdate": "2018-04-19T19:46:06.000Z",
    "pubDate": "2018-04-19T19:46:06.000Z",
    "link": "https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce",
    "guid": "http://www.inoreader.com/article/3a9c6e7e20522221",
    "author": "Mike Loukides",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "All - O'Reilly Media",
        "url": "http://radar.oreilly.com/"
    },
    "categories": [
        "Feedbase"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "From USENET to Facebook: The second time as farce"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://d3tdunqjn7n0wj.cloudfront.net/600x450/honore_daumier_-_lower_the_curtain_the_farce_is_ended_baissez_le_rideau_la_farce_est_jouee_-_plate_421_-_google_art_project_crop-a7c87ecb68c445ac2b0e8ea9a0ced841.jpg\" alt=\"honore_daumier_-_lower_the_curtain_the_f\"></p><p><em>Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</em></p><p>Re-interpreting Hegel, Marx <a href=\"https://www.gutenberg.org/files/1346/1346-h/1346-h.htm\">said</a> that everything in history happens twice, the first time as tragedy, the second as farce. That‚Äôs a fitting summary of Facebook‚Äôs Very Bad Month. There‚Äôs nothing here we haven‚Äôt seen before, nothing about abuse, trolling, racism, spam, porn, and even bots that hasn‚Äôt already happened. This time as farce? Certainly <a href=\"https://www.wired.com/story/why-zuckerberg-15-year-apology-tour-hasnt-fixed-facebook/\">Zuckerberg‚Äôs 14-year Apology Tour</a>, as Zeynep Tufecki calls it, has the look and feel of a farce. He just can‚Äôt stop apologizing for Facebook‚Äôs messes.</p> \n \n \n \n<p>Except that the farce isn‚Äôt over yet. We‚Äôre in the middle of it. As Tufekci points out, 2018 isn‚Äôt the first time Zuckerberg has said ‚Äúwe blew it, we‚Äôll do better.‚Äù Apology has been a roughly biennial occurrence since Facebook‚Äôs earliest days. So, the question we face is simple: how do we bring this sad history to an endpoint that isn‚Äôt farce? The third time around, should there be one, it isn‚Äôt even farce; it‚Äôs just stupidity. We don‚Äôt have to accept future apologies, whether they come from Zuck or some other network magnate, as inevitable.</p> \n \n \n \n<p>I want to think about what we can learn from the forerunners of modern social networks‚Äîspecifically about <a href=\"https://en.wikipedia.org/wiki/Usenet\">USENET</a>, the proto-internet of the 1980s and 90s. (The same observations probably apply to <a href=\"https://en.wikipedia.org/wiki/Bulletin_board_system\">BBSs</a>, though I‚Äôm less familiar with them.) USENET was a decentralized and unmanaged system that allowed Unix users to exchange ‚Äúposts‚Äù by sending them to hundreds of newsgroups. It started in the early 80s, peaked sometime around 1995, and arguably ended as tragedy (though it went out with a whimper, not a bang).</p> \n \n \n \n<p>As a no-holds-barred Wild West sort of social network, USENET was filled with everything we rightly complain about today. It was easy to troll and be abusive; all too many participants did it for fun. Most groups were eventually flooded by spam, long before spam became a problem for email. Much of that spam distributed pornography or pirated software (‚Äúwarez‚Äù). You could certainly find newsgroups in which to express your inner neo-Nazi or white supremacist self. Fake news? We had that; we had malicious answers to technical questions that would get new users to trash their systems. And yes, there were bots; that technology isn‚Äôt as new as we‚Äôd like to think.</p> \n \n \n \n<p>But there was a big divide on USENET between moderated and unmoderated newsgroups. Posts to moderated newsgroups had to be approved by a human moderator before they were pushed to the rest of the network. Moderated groups were much less prone to abuse. They weren‚Äôt immune, certainly, but moderated groups remained virtual places where discussion was mostly civilized, and where you could get questions answered. Unmoderated newsgroups were always spam-filled and frequently abusive, and the alt.* newsgroups, which could be created by anyone, for any reason, matched anything we have now for bad behavior.</p> \n \n \n \n<p>So, the first thing we should learn from USENET is the importance of moderation. Fully human moderation at Facebook scale is impossible. With seven billion pieces of content shared per day, even a million moderators would have to scan seven thousand posts each: roughly 4 seconds per post. But we don‚Äôt need to rely on human moderation. After USENET‚Äôs decline, <a href=\"https://www.microsoft.com/en-us/research/publication/observed-behavior-and-perceived-value-of-authors-in-usenet-newsgroups-bridging-the-gap/\">research</a> <a href=\"https://books.google.com/books?id=2IltDgAAQBAJ&amp;pg=PA21&amp;lpg=PA21&amp;dq=usenet+trolls+analysis&amp;source=bl&amp;ots=JEiHPslBRm&amp;sig=gerJGs1tO0WvIt9zsOgeSPSH6Ys&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwiryMmo_bzaAhUlWN8KHRZkArsQ6AEIUjAE#v=onepage&amp;q=usenet%20trolls%20analysis&amp;f=false\">showed</a> that it was possible to classify users as newbies, helpers, leaders, trolls, or flamers, purely by their communications patterns‚Äîwith only minimal help from the content. This could be the basis for automated moderation assistants that kick suspicious posts over to human moderators, who would then have the final word. Whether automated or human, moderators prevent many of the bad posts from being made in the first place. It‚Äôs no fun being a troll if you can‚Äôt get through to your victims.</p> \n \n \n \n<p>Automated moderation can also do fact checking. The technology that won Jeopardy a decade ago is more than capable of checking basic facts. It might not be capable of checking complex logic, but most ‚Äúfake news‚Äù centers around facts that can easily be evaluated. And automated systems are very capable of detecting bots: Google‚Äôs Gmail has successfully throttled spam.</p> \n \n \n \n<p>What else can we learn from USENET? Trolls were everywhere, but the really obnoxious stuff stayed where it was supposed to be. I‚Äôm not naive enough to think that neo-Nazis and white supremacists will dry up and go away, on Facebook or elsewhere. And I‚Äôm even content to allow them to have their own Facebook pages: Facebook can let these people talk to each other all they want, because they‚Äôre going to do that anyway, whatever tools you put in place. The problem we have now is that Facebook‚Äôs engagement metric paves the road to their door. Once you give someone a hit of something titillating, they‚Äôll come back for more. And the next hit has to be stronger. That‚Äôs how you keep people engaged, and that‚Äôs (<a href=\"https://www.nytimes.com/2018/03/10/opinion/sunday/youtube-politics-radical.html\">as Tufekci has argued about YouTube</a>) how you radicalize them.</p> \n \n \n \n<p>USENET had no engagement metrics, no means of linking users to stronger content. Islands of hatred certainly existed. But in a network that didn‚Äôt optimize for engagement, hate groups didn‚Äôt spread. Neo-Nazis and their like were certainly there, but you had to search them out, you weren‚Äôt pushed to them. The platform didn‚Äôt lead you there, trying to maximize your ‚Äúengagement.‚Äù I can‚Äôt claim that was some sort of brilliant design on USENET‚Äôs part; it just wasn‚Äôt something anyone thought about at the time. And as a free service, there was a need to maximize profit. Facebook‚Äôs obsession with engagement is ultimately more dangerous than their sloppy handling of personal data. ‚ÄúEngagement‚Äù allows‚Äîindeed, encourages‚Äîhate groups to metastasize.</p> \n \n \n \n<p>Engagement metrics harm free speech, another ideal carried to the modern internet from the USENET world. But in an ‚Äúattention economy,‚Äù where the limiting factor is attention, not speech, we have to rethink what those values mean. I‚Äôve said that USENET ended in a ‚Äúwhimper‚Äù‚Äîbut what drained the energy away? The participants who contributed real value just got tired of wading through the spam and fighting off the trolls. They went elsewhere. USENET‚Äôs history gives us a warning: good speech was crowded off the stage by bad speech.</p> \n \n \n \n<p>Speech that exists to crowd out other speech isn‚Äôt the unfettered interchange of ideas. Free speech doesn‚Äôt mean the right to a platform. Indeed, the U.S. Constitution already makes that distinction: ‚Äúfreedom of the press‚Äù is about platforms, and you don‚Äôt get freedom of the press unless you have a press. Again, Zeynep Tufekci has it: in ‚Äú<a href=\"https://www.wired.com/story/free-speech-issue-tech-turmoil-new-censorship/\">It‚Äôs the (Democracy-Poisoning) Golden Age of Free Speech</a>,‚Äù she writes ‚ÄúThe most effective forms of censorship today involve meddling with trust and attention, not muzzling speech itself.‚Äù Censorship isn‚Äôt about arresting dissidents; it‚Äôs about generating so much noise that voices you don‚Äôt like can‚Äôt be heard.</p> \n \n \n \n<p>If we‚Äôre to put an end to the farce, we need to understand what it means to enable speech, rather than to drown it out. Abandoning ‚Äúengagement‚Äù is part of the solution. We will be better served by a network that, like USENET, doesn‚Äôt care how people engage, and that allows them to make their own connections. Automated moderation can be a tool that makes room for speech, particularly if we can take advantage of communication patterns to moderate those whose primary goal is to be the loudest voice.</p> \n \n \n \n<p>Marx certainly would have laid blame at the feet of Zuckerberg, for naively and profitably commoditizing the social identities of his users. But blame is not a solution. As convenient a punching bag as Zuckerberg is, we have to recognize that Facebook‚Äôs problems extend to the entire social world. That includes Twitter and YouTube, many other social networks past and present, and many networks that are neither online nor social. Expecting Zuck to ‚Äú<a href=\"https://www.facebook.com/zuck/posts/10104380170714571\">fix Facebook</a>‚Äù may be the best way to guarantee that the farce plays on.</p> \n \n \n \n<p>History is only deterministic in hindsight, and it doesn‚Äôt have to end in farce (or worse). We all build our social networks, and Mark Zuckerberg isn‚Äôt the only player on history‚Äôs stage. We need to revisit, reassess, and learn from all of our past social networks. Demanding and building a social network that serves us and enables free speech, rather than serving a business metric that amplifies noise, is the way to end the farce.</p> \n \n \n \n<p>Is that a revolution? We have nothing to lose but our chains.</p> \n<p>Continue reading <a href=\"https://www.oreilly.com/ideas/from-usenet-to-facebook-the-second-time-as-farce\">From USENET to Facebook: The second time as farce.</a></p><img src=\"http://feeds.feedburner.com/~r/oreilly/radar/atom/~4/AwGHYMGH7dg\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:46:06 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Feedbase"
    },
    "dc:creator": {
        "@": {},
        "#": "Mike Loukides"
    },
    "rss:source": {
        "@": {
            "url": "http://radar.oreilly.com/"
        },
        "#": "All - O'Reilly Media"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e20522221"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "On Analog Social Media",
    "description": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:38:41.000Z",
    "pubdate": "2018-04-19T19:38:41.000Z",
    "pubDate": "2018-04-19T19:38:41.000Z",
    "link": "http://calnewport.com/blog/2018/03/28/on-analog-social-media/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e36c92536",
    "author": "Study Hacks",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cal Newport &raquo; Blog",
        "url": "http://calnewport.com/"
    },
    "categories": [
        "Abonnementen"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "On Analog Social Media"
    },
    "rss:link": {
        "@": {},
        "#": "http://calnewport.com/blog/2018/03/28/on-analog-social-media/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/talking-dock-640px.jpeg\" alt=\"\" width=\"640\" height=\"351\"></p> \n<p><strong>The Declutter Experiment</strong></p> \n<p>In late 2017, as part of my research for a book I‚Äôm writing on <a href=\"http://calnewport.com/blog/2016/12/18/on-digital-minimalism/\">digital minimalism</a>, I invited my mailing list subscribers to participate in an experiment I called <em>the digital declutter</em>.</p> \n<p>The idea was simple. During the month of January, 2018, participants would take a break from ‚Äúoptional technologies‚Äù in their lives, including, notably, social media. At the end of the 31-day period, the participants would then rebuild their digital lives starting from a blank slate ‚Äî only allowing back in technologies for which they could provide a compelling motivation.</p> \n<p>I expected around 40 ‚Äì 50 people would agree to participate in this admittedly disruptive exercise.</p> \n<p><em>My guess was wrong. </em></p> \n<p>More than 1,600 people signed up. We even received national attention when<a href=\"https://www.nytimes.com/2018/02/04/us/politics/online-addictions-cut-back-screen-time.html?mtrref=www.google.com&amp;gwh=535213B35309F1EA54EA4F2F86AED58F&amp;gwt=pay\"> the <em>New York Times</em> wrote a nice article</a> about the experiment.</p> \n<p>Since January, I‚Äôve been reading through the hundreds of reports that participants sent me about their experience with the digital declutter.¬†I‚Äôve been learning a lot from these case studies, but I want to focus here on one observation in particular that caught my attention: when freed from standard digital distractions, participants often overhauled their free time in massively positive ways.</p> \n<p><strong><em>Here are some real examples of this behavior from my digital declutter experiment‚Ä¶</em></strong></p> \n<p>‚Äì&gt; An engineer named James realized how much of the information he used to consume though social media during the day was ‚Äúunimportant or useless.‚Äù With this drain on his attention removed from his routine, he returned to his old hobby of playing chess, and became an enthusiast of architectural Lego kits (‚Äúa wonderful outlet‚Äù).</p> \n<p>‚Äì&gt; Heather, a writer and mother of three homeschooled kids, completed a draft of a book, while also reading ‚Äúmany books‚Äù written by others. ¬†‚ÄúI‚Äôm recapturing my creative spirit,‚Äù she told me.</p> \n<p>‚Äì&gt; An IT professional named Andy noted that he typically reads 3 ‚Äì 5 books a year. Free from the time sink of social media, he‚Äôs on track to finish <em>50 books</em> in 2018.</p> \n<p>‚Äì&gt; Angie is a yoga instructor, but she also has BFA and used to be a professional artist. ‚ÄúNot spending time on social media had me thinking,‚Äù she told me, ‚Äúwhat do I want to get good at? Making social media posts, or getting back into painting?‚Äù She choose painting. During her declutter she booked three new art shows and had her work accepted at a juried exhibition. ‚ÄúFor me, it was simply a refocusing of my time and commitment to myself, to get better at something I love,‚Äù she said.</p> \n<p>‚Äì&gt; ¬†A retired stockbroker named Bob began to spend more time with his wife, going for walks, and ‚Äúreally listening.‚Äù He expanded this habit of trying to ‚Äúlisten more and talk less‚Äù to his friends and family more generally.</p> \n<p>‚Äì&gt; A PhD candidate named Alma described the experience of stepping away from distracting technologies as ‚Äúliberating.‚Äù Her mind began ‚Äúworking all the time,‚Äù but on things that were important to her, and not just news about ‚Äúcelebrities and their diets and workouts.‚Äù Among other things, she told me: ‚ÄúI was more there for my girls,‚Äù I could focus on ‚Äúkeeping my marriage alive,‚Äù and at night ‚ÄúI would read research papers [in the time I used to spend scrolling feeds].‚Äù</p> \n<p>‚Äì&gt; Another PhD candidate named Jess tackled¬†<em>Anna Karenina</em> and¬†<em>Infinite Jest </em>during the declutter. ‚ÄúNow that I feel like I‚Äôm actively choosing what I do with my downtime, I find [hard] activities like reading more pleasurable.‚Äù</p> \n<p>‚Äì&gt; A government worker named Ari replaced his online news habit with a daily subscription to the¬†<em>Wall Street Journal</em><em>¬†</em>print edition. ‚ÄúI still feel perfectly up to date with the news, without getting caught up in the minute-to-minute clickbait headlines and sensationalism that is so typical of online news,‚Äù he told me.</p> \n<p>‚Äì&gt; When a publishing executive named Leonie gave up Facebook, she had an epiphany: ‚ÄúI¬†<em>do</em> want to connect socially,‚Äù she told me, ‚Äúbut for a bigger purpose, and with a specific group of people, and to share a valuable message.‚Äù So she started her own blog on a topic she finds important. ‚ÄúIt‚Äôs early days yet, but I‚Äôm enjoying this redirection my time and creative energy into making something that‚Äôs uniquely me, instead of getting caught up in the ‚Äòcompete and compare‚Äô culture of social media.‚Äù</p> \n<p>‚Äì&gt; David was a former professor looking for a new job after moving to a different state. Ignoring the traditional advice that social media is key to finding jobs (<a href=\"https://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html?mtrref=www.google.com&amp;gwh=D48B398E6794C295CB2F83550BE6018F&amp;gwt=pay\">as I also recommend</a>), he deleted his accounts and dedicated his newfound free time to a more traditional job search. ‚ÄúI started getting more and more job interviews,‚Äù he told me, attributing his success to being able to deeply research open positions. This effort culminated in the last last week of the declutter: ‚ÄúI had five job interviews in five days and two offers.‚Äù He also competed a full rewrite of a young adult novel he was writing. ‚ÄúSo I would say this experiment was a wild success,‚Äù he concluded.</p> \n<p><strong>Analog Social Media</strong></p> \n<p>My initial interpretation of stories like the above was that tools like social media consume lots of time. Therefore, when you minimize their role in your life, you free up time for other, more valuable pursuits.</p> \n<p>On closer inspection, however, I refined this take. Many of the people who sent me declutter stories were not simply replacing social media use with unrelated activities. In many cases, they were instead finding <em>improved</em> sources of the benefits that drew them to social media in the first place.</p> \n<p>For example‚Ä¶</p> \n<ul><li>One reason people use social media is that browsing their accounts provides a quick hit of entertainment. As many of the participants in my declutter discovered, however, old fashioned, analog activities can provide much richer entertainment. Just ask Angie about her rediscovery of painting or James about the return of his chess hobby.</li> \n<li>Another reason people use social media is to connect with family and friends. But many of my participants found that real world efforts to stay in touch proved more rewarding than clicking ‚Äúlike‚Äù or scrolling timelines. We see this, for example, in Alma spending more time with her daughters, or Bob investing energy into seriously listening to his family.</li> \n<li>People also use social media to stay informed and learn new ideas. But a consistent theme in the declutter stories was the overall¬†<em>negative</em> impact of trying to keep up with breaking news online. Ari‚Äôs experience, in which he discovered that reading a print newspaper kept him both informed and much less anxious, was shared by many participants who explored ‚Äúslower‚Äù ways to keep up with the news. And when it comes to learning new ideas, perhaps the most common observation made by declutter participants was that they ended up reading <em>many</em> more books.¬†Jess and Andy‚Äôs experience of rediscovering the joy of reading are just two case studies among many similar stories that I received.</li> \n</ul><p>In some sense, the participants in my digital declutter experiment developed¬†analog alternatives to social media, in which they recreated many of the benefits promised by these digital tools using more intentional real world activities.</p> \n<p>The resulting¬†<em>analog social media</em>¬†tended to prove significantly more satisfying and rewarding than the addictive experiences offered through screens by the <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">algorithmic attention economy</a>. ¬†It also had the advantage of freeing participants from the sense that their personhood is constantly being sliced, diced and packaged into digital bundles to be sold to the highest bidder.</p> \n<p><strong>Beyond Loss Aversion</strong></p> \n<p>In recent decades, our culture has developed a strange loss aversion when it comes to digital consumer products.</p> \n<p>Even people who are fed up with the deprivations of the algorithmic attention economy are often reluctant to give up services like social media because doing so might lead them to lose some benefits. Loss aversion teaches them to avoid such losses at all costs.</p> \n<p>The experiments in analog social media described above, however, highlight an alternative to this obsession with loss aversion. Instead of treating all benefits as equal, you can instead ask what activities provide the¬†<em>best</em> benefits.</p> \n<p>Facebook, for example, might help your social life. But redirecting the 50 minutes per day the average Facebook user spends using these services toward phone conversations and real world outings will likely benefit your social life much more.</p> \n<p>To focus on the latter is not¬†<em>missing out</em> on the benefits of Facebook. It‚Äôs instead replacing Facebook with an activity that boasts an even better return on investment.</p> \n<p>To state this more abstractly:</p> \n<blockquote><p>Focusing on the most beneficial activities to the exclusion of less beneficial alternatives can leave you <strong>better off</strong> than trying to clutter your life with everything that might offer some value.</p></blockquote> \n<p>This idea is not new. It‚Äôs the foundation of all minimalism philosophies, including my own concept of digital minimalism. But I wanted to emphasize its importance in our current moment because I think it should be part of the recently energized cultural conversation surrounding social media.</p> \n<p>When it comes to tools like Facebook, Twitter or Instagram: don‚Äôt let the fear of missing out dictate how you live your life. The most productive and fulfilled people I know often got where they are by doubling down on the activities that return them huge benefits, while happily ignoring everything else.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=eOAyhoaiyQU:ostjx905BYA:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/eOAyhoaiyQU\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:38:41 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Abonnementen"
    },
    "dc:creator": {
        "@": {},
        "#": "Study Hacks"
    },
    "rss:source": {
        "@": {
            "url": "http://calnewport.com/"
        },
        "#": "Cal Newport &raquo; Blog"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e36c92536"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Beyond #DeleteFacebook: More Thoughts on Embracing the Social Internet Over Social Media",
    "description": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T19:33:18.000Z",
    "pubdate": "2018-04-19T19:33:18.000Z",
    "pubDate": "2018-04-19T19:33:18.000Z",
    "link": "http://calnewport.com/blog/2018/03/25/beyond-deletefacebook-more-thoughts-on-embracing-the-social-internet-over-social-media/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e301ff2a4",
    "author": "Study Hacks",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cal Newport &raquo; Blog",
        "url": "http://calnewport.com/"
    },
    "categories": [
        "Abonnementen"
    ],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Beyond #DeleteFacebook: More Thoughts on Embracing the Social Internet Over Social Media"
    },
    "rss:link": {
        "@": {},
        "#": "http://calnewport.com/blog/2018/03/25/beyond-deletefacebook-more-thoughts-on-embracing-the-social-internet-over-social-media/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://calnewport.com/wp-content/uploads/2018/03/gears-640px.jpeg\" alt=\"\" width=\"640\" height=\"427\"></p> \n<p><strong>A Social Transition</strong></p> \n<p>Last week, <a href=\"http://calnewport.com/blog/2018/03/20/on-social-media-and-its-discontents/\">I wrote a blog post</a> emphasizing the distinction between the <em>social internet</em> and <em>social media</em>. The former describes the internet‚Äôs ability to enable connection, learning, and expression. The latter describes the attempt of a small number of large companies to monetize these capabilities inside walled-garden, monopoly platforms.</p> \n<p>My argument is that you can embrace the social internet without having to become a <a href=\"http://www.amazon.com/gp/product/0307389979/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0307389979&amp;linkCode=as2&amp;tag=stuhac-20\">‚Äúgadget‚Äù</a> inside the algorithmic attention economy machinations of the social media conglomerates. As noted previously, I think this is the¬†<em>right</em> answer for those who are fed up with the dehumanizing aspects of social media, but are reluctant to give up altogether on the potential of the internet to bring people together.</p> \n<p>The key follow up question, of course, is how to fruitfully engage with the social internet outside the convenient confines of social media. In my last post I pointed toward one possibility: the development of open <em>social protocols</em> that support the network effect usefulness of large social networks without a centralized company in charge.</p> \n<p>This solution, however, requires that you wait for others to make progress on a somewhat complicated technological agenda.</p> \n<p>In this post, I want to discuss two additional approaches that individuals can put in place¬†<em>right now</em> to begin their transition from social media to the social internet.</p> \n<p>The first approach provides an intermediate step ‚Äî a way to minimize the worst effects of social media without fully leaving its ecosystem. The second approach describes a more severe separation.</p> \n<p><strong>Approach #1: The Slow Social Media Philosophy</strong></p> \n<p>In my 2016 book,¬†<a href=\"http://www.amazon.com/gp/product/1455586692/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1455509124&amp;linkCode=as2&amp;tag=stuhac-20\"><em>Deep Work</em></a>, I proposed a strictly binary approach to social media: you should perform an honest cost/benefit analysis on the social media platforms in your life, and quit all services that don‚Äôt provide substantially more benefits than costs with respect to things you truly value.</p> \n<p>The issue with this idea, as I discovered, is that many people¬†<em>could</em> identify a small number of important benefits provided to them by particular social media platforms that couldn‚Äôt be easily replaced. Two common examples of such benefits include sharing photos of your kids with relatives on Instagram, and keeping up with important community or support organizations that coordinate using Facebook Groups.</p> \n<p>This is problematic because once you allow one of these platforms into your life for any reason, they have a way of annexing your cognitive landscape well beyond the boundaries of your original intent.</p> \n<p>The average user now spends <a href=\"https://www.socialmediatoday.com/marketing/how-much-time-do-people-spend-social-media-infographic\">almost two hours¬†<em>per day</em></a> on social media ‚Äî at best a small fraction of this time is dedicated to the ‚Äúimportant‚Äù reasons most would list when asked why they need to use these services.</p> \n<p>In other words: it‚Äôs not just what social media you use, but how you use it.</p> \n<p>With this in mind, in the two years that have passed since the original publication of¬†<em>Deep Work</em>, I‚Äôve evolved a more nuanced philosophy that I call¬†<em>slow social media</em>.</p> \n<p>Here are the basic principles:</p> \n<ul><li>Only use a given social media service if it provides valuable benefits that would be hard to replace.¬†Use these services¬†<em>only</em> for these purposes.</li> \n<li>Delete all social media apps from your phone. (Few serious uses for social media require that you can access it wherever you are throughout the day.) Instead, access social media through a web browser on your laptop or desktop, once or twice a week.</li> \n<li>When logged onto a social media service, don‚Äôt click ‚Äúlike‚Äù or follow links unrelated to your specific, high-value purposes ‚Äî these activities mainly serve the social media conglomerate‚Äôs attempts to package you into data slivers that they can sell to the highest bidder.</li> \n</ul><p>Practicing slow social media allows you to maintain the hard to replace value that these services might provide you, while at the same time neutering their ability to transform you into a pawn in their algorithmic attention economy games.</p> \n<p>Adding these restrictions also has the benefit of clarifying the true value of the activities that keep you in the social media orbit. If you find that the extra obstacle of using a web browser instead of your phone prevents you from using a given service for more than a month, than you should quit it altogether.</p> \n<p>I was surprised by how many of my readers reported exactly this experience, proving that the stories they told themselves about social media‚Äôs importance to their existence were more fictional than they had realized.</p> \n<p><strong>Approach #2: Own Your Own Domain</strong></p> \n<p>In a recent issue of <em>The Hedgehog Review</em>, Alan Jacobs wrote an interesting essay titled <a href=\"http://www.iasc-culture.org/THR/THR_article_2018_Spring_Jacobs.php\">‚ÄúTending the Digital Commons.‚Äù</a> In this piece, Jacobs highlights the dangerous tradeoff implicit in using the major social media platforms.</p> \n<p>These services, he notes, provide you convenience (they‚Äôre easy to learn and use, and provide access to a large existing network of users), but in exchange, they maintain control over the information your produce.</p> \n<p>They can then monetize your work in any way that suits their bottom line. As Jacobs writes, it‚Äôs incorrect to call the major social media platforms ‚Äúwalled gardens,‚Äù because‚Ä¶</p> \n<blockquote><p>‚Äú‚Ä¶they are not gardens; they are walled industrial sites, within which users, for no financial compensation, produce data which the owners of the factories sift and then sell.‚Äù</p></blockquote> \n<p>This is an economic state that the techno-critic Nicholas Carr provocatively describes as <a href=\"http://www.roughtype.com/?p=1600\">‚Äúdigital sharecropping.‚Äù</a></p> \n<p>Perhaps more pernicious than the ability of these ‚Äúwalled industrial sites‚Äù to exploit your labor, however, is their ability to control your behavior ‚Äî nudging you toward certain ways of describing yourself and encountering the world that make you more profitable to the social media barons, but might alienate you from your humanity.</p> \n<p>(This is the chief concern voiced by Jaron Lanier, <a href=\"http://www.jaronlanier.com/agentalien.html\">who first warned us about these issues over twenty years ago.</a>)</p> \n<p>What‚Äôs the solution?¬†Here‚Äôs Jacobs:</p> \n<blockquote><p>‚ÄúWe need to revivify the open Web and teach others‚Äîespecially those who have never known the open Web‚Äîto learn to live extramurally: outside the walls.¬†What do I mean by ‚Äòthe open Web‚Äô? I mean the World Wide Web as created by Tim Berners-Lee and extended by later coders.‚Äù</p></blockquote> \n<p>To be more concrete, he‚Äôs suggesting that if you want to connect and express yourself online, the best way to do so is to own your own website.</p> \n<p>Buy a domain. Setup a web hosting account (my host, <a href=\"http://www.a2hosting.com/\">A2</a>, has introductory packages that cost less than $4 a month). Install WordPress or hand code a web site for this account. Let people follow you directly by checking your site, or subscribing to an RSS feed or email newsletter.</p> \n<p><em>In other words, acquire your own damn digital land on which you can do whatever you want without anyone else trying to exploit you or¬†influence your behavior.</em></p> \n<p>I‚Äôm biased, of course, because this is my approach to the social internet. I‚Äôve never had a social media account. (For the record, @CalNewport is not me ‚Äî it‚Äôs a fake Twitter account that I know nothing about.)¬†Instead, I‚Äôve built my own little empire here on calnewport.com where no one can bother me, or insert advertisements against my will, or, <em>ahem</em>,¬†use my behavior to help influence political campaigns.</p> \n<p>I can tell you from experience that this approach is harder than simply setting up a Twitter handle and letting the clever hashtags fly, but it‚Äôs immensely more satisfying to produce things when you‚Äôre not a data point in some Silicon Valley revenue report.</p> \n<p>It‚Äôs also, however, humbling.</p> \n<p>As I wrote in¬†<em>Deep Work</em>, part of the power of the social media business model is that it ¬†introduces a type of <em>attention collectivism</em>, where I‚Äôll promise to pretend to care what you have to say (by clicking ‚Äúlike‚Äù or leaving a quick comment), if you do the same for me. This is incredibly seductive, though ultimately hollow.</p> \n<p>When you run your own site, reality is harsher. If people don‚Äôt truly care about what you have to say, or don‚Äôt truly care about you, they‚Äôre not going to stick around. You have to earn their attention. Which can be really, really hard.</p> \n<p>But I don‚Äôt think that this is a bad thing.</p> \n<p>For those who want recognition, this reality provides a useful forcing function for helping them through the deliberate work of cultivating thoughts worth sharing.</p> \n<p>For those who don‚Äôt crave recognition, it induces a digital life that‚Äôs more localized to closer friends and family ‚Äî a state that‚Äôs more congruent with our fundamental human instincts.</p> \n<p><strong>Conclusion</strong></p> \n<p>Slow social media and escaping the walled factories of industrial social media are two ways to step toward a more authentic social internet experience. They‚Äôre not, however, the only ways. As with my last post on this subject, I‚Äôm more interested in sparking new ways of thinking about your digital life than I am in providing you the definitive road map.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/StudyHacks?a=mt8UPyOYfjU:-7LbWGtQYYI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/StudyHacks?d=yIl2AUoC8zA\" alt=\"StudyHacks?d=yIl2AUoC8zA\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/StudyHacks/~4/mt8UPyOYfjU\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 19:33:18 +0000"
    },
    "rss:category": {
        "@": {},
        "#": "Abonnementen"
    },
    "dc:creator": {
        "@": {},
        "#": "Study Hacks"
    },
    "rss:source": {
        "@": {
            "url": "http://calnewport.com/"
        },
        "#": "Cal Newport &raquo; Blog"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e301ff2a4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Switching From RSS to Apple News Format",
    "description": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>",
    "summary": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>",
    "date": "2018-04-19T14:18:40.000Z",
    "pubdate": "2018-04-19T14:18:40.000Z",
    "pubDate": "2018-04-19T14:18:40.000Z",
    "link": "https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27410708",
    "author": "Michael Tsai",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Michael Tsai",
        "url": "http://mjtsai.com/blog"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Switching From RSS to Apple News Format"
    },
    "rss:link": {
        "@": {},
        "#": "https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/"
    },
    "rss:description": {
        "@": {},
        "#": "<p>This blog has been <a href=\"https://apple.news/TOe8IoEHXTDKknwyO8gNRTQ\">available in Apple News</a> from the beginning, but I‚Äôve recently switched from having Apple News fetch the RSS feed to using the <a href=\"https://wordpress.org/plugins/publish-to-apple-news/\">Publish to Apple News</a> WordPress plug-in to <a href=\"https://developer.apple.com/news-publisher/\">push updates to Apple News</a>.</p> \n \n<p>Pros:</p> \n<ul><li><p>New posts show up in Apple News more quickly. (Apple News could have polled the RSS more frequently, as many feed readers do; it just chose not to.)</p></li> \n<li><p>I can update the content of old posts. Typos don‚Äôt have to live forever. (Most feed readers can do this, too, but Apple News didn‚Äôt.)</p></li> \n<li><p>I can update the content of posts that are too old to appear in the feed. (RSS can‚Äôt do that.)</p></li> \n<li><p>It shows the proper title for each article, whereas with RSS it would use the full page title (unlike all the other feed readers I‚Äôve seen).</p></li> \n<li><p>You have more control over the fonts and layout, and can include images. (For now, I‚Äôm just using the default template.)</p></li> \n<li><p>There‚Äôs an analytics feature.</p></li> \n<li><p>You can get paid for showing <a href=\"https://developer.apple.com/library/content/documentation/General/Conceptual/News_Advertising/MonetizationOverview.html\">ads that Apple sells</a>. (I have not enabled this feature.)</p></li> \n</ul><p>Cons:</p> \n<ul><li><p>Once you switch away from RSS, there‚Äôs no way to go back.</p></li> \n<li><p>With RSS, each post automatically gets a link at the bottom to <a href=\"https://forums.developer.apple.com/thread/48493\">Read Original Story</a>, and this can also be accessed by swiping up. This is no longer present when using Apple News Format; it seems that Apple doesn‚Äôt want to send any traffic to your site or let readers see comments or other additional content.</p></li> \n<li><p>I was able to hack the plug-in‚Äôs PHP to manually insert a link at the bottom. However, for reasons I don‚Äôt understand, Apple News is <em>much</em> slower to display the page after I tap the link. I get a spinner for about 5 seconds, whereas with the old RSS link it seemed instantaneous.</p></li> \n<li><p>Each new post or update generates a notification banner in the comments section of WordPress that I have to manually clear. This cannot be done in bulk.</p></li> \n<li><p>Posts with emoji generate seemingly spurious errors: ‚ÄúThe following JSON errors were detected: Invalid unicode character sequences were found that could cause display issues on Apple News.‚Äù</p></li> \n<li><p>It doesn‚Äôt show the date when the content was updated, only when it was originally posted. Nor is there a way to sort or search for updates. (This didn‚Äôt work with RSS, either, though.)</p></li> \n</ul><p>Overall, I think switching to Apple News Format was a win, mainly because the RSS support was so bad. I‚Äôm still <a href=\"https://twitter.com/smakofsky/status/984778112255709184\">mystified</a> by Apple News itself. It‚Äôs <a href=\"https://twitter.com/amir/status/839955541375885312\">drawn</a> <a href=\"https://twitter.com/BenBajarin/status/986668085959507968\">rave</a> <a href=\"https://twitter.com/nexusCFX/status/986651065301975040\">reviews</a> <a href=\"https://twitter.com/ericyoung_1/status/983793958198198272?ref_src=twsrc%5Etfw\">from</a> <a href=\"https://twitter.com/robquig/status/984812707097579522?ref_src=twsrc%5Etfw\">some</a> <a href=\"https://twitter.com/OhMDee/status/986383650315841536\">quarters</a>, but I find the interface cumbersome and have not found its content recommendations helpful. Perhaps the difference is that some people are comparing it with social networks and Google News, whereas I‚Äôm a longtime user of desktop feed readers.</p>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:18:40 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Michael Tsai"
    },
    "rss:source": {
        "@": {
            "url": "http://mjtsai.com/blog"
        },
        "#": "Michael Tsai"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27410708"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Drafts 5 Overhauls Note-Taking App With New Themes, Editor Options and Action Features",
    "description": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T14:17:12.000Z",
    "pubdate": "2018-04-19T14:17:12.000Z",
    "pubDate": "2018-04-19T14:17:12.000Z",
    "link": "https://www.macrumors.com/2018/04/19/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27975be2",
    "author": "Tim Hardwick",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "MacRumors: Mac News and Rumors - All Stories",
        "url": "http://www.macrumors.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Drafts 5 Overhauls Note-Taking App With New Themes, Editor Options and Action Features"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.macrumors.com/2018/04/19/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features/"
    },
    "rss:description": {
        "@": {},
        "#": "A new version of <a href=\"http://getdrafts.com\">Drafts</a>, the simple note-taking app from Agile Tortoise, was released today. Drafts 5 stays faithful to its predecessor's primary goal of allowing users to quickly jot down text, thoughts, ideas, and notes, and builds on these functions by introducing a ground-up rewrite of the app with a raft of new features and customization options.  \n<br><br> \nAgile Tortoise has opted to release Drafts 5 as a standalone app, which means it doesn't replace Drafts 4, but installs alongside it, allowing users to migrate previous drafts, actions and keyboard customizations from the earlier app.  \n<br><br><img src=\"http://cdn.macrumors.com/article-new/2018/04/drafts-5-devices-800x542.jpg\" alt=\"\" width=\"800\" height=\"542\"><br> \nOnce they've done that, long-time users can look forward to new interface theming options ‚Äì like the ability to switch between light and dark modes ‚Äì and granular control of a host of draft appearance settings in the new editor. These include the ability to adjust margins, line height, line numbering, auto-correct, smart quotes/dashes, and more. \n<br><br> \nDrafts 5 also introduces new organization options with multiple tags, which can be used to filter the draft list and queries for all inbox, archived, and flagged drafts. Elsewhere, a new Focus mode disables the automatic creation of new drafts after a specific time period, allowing users to continue adding to drafts long after they were first created. Siri integration is another new addition in this version, so users can add a note to Drafts by just using their voice. \n<br><br> \nElsewhere, there's enhanced support for inline syntax highlighting for several different types of markup, interactive to-dos, drag and drop support, multiple extended keyboards for grouping actions into categories, a new Action Directory, and automated backup. Small changes have also been made to improve the Apple Watch complication of Drafts 5, which allows dictation and note-taking from the wrist, as well as flagging and tagging of drafts. \n<br><br> \nThe comprehensive list of changes and improvements can be found on the <a href=\"http://getdrafts.com/gettingstarted/overview.html\">GetDrafts.com website</a>. Drafts for iPhone, iPad and Apple Watch is a free download on the App Store [<a href=\"https://itunes.apple.com/app/id1236254471?ls=1&amp;mt=8\">Direct Link</a>], while Drafts Pro is a universal subscription ($20 per year / $2 per month) that unlocks more features. These include themes, custom icons, editing of actions, saving workspaces and more. According to the developer, Draft 4 will continue to be supported and available, so users can choose to migrate to Drafts 5 if and when they feel they are ready.<br><br><div>Tag: <a href=\"https://www.macrumors.com/roundup/agilebits/\">AgileBits</a></div><br><a href=\"https://forums.macrumors.com/threads/drafts-5-overhauls-note-taking-app-with-new-themes-editor-options-and-action-features.2115620/\">Discuss this article</a> in our forums<br><br><div> \n<a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:6W8y8wAjSf4\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=6W8y8wAjSf4\" alt=\"MacRumors-All?d=6W8y8wAjSf4\"></a> <a href=\"http://feeds.macrumors.com/~ff/MacRumors-All?a=gb9AYdpz8ro:NuiSt2rbEyc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/MacRumors-All?d=qj6IDK7rITs\" alt=\"MacRumors-All?d=qj6IDK7rITs\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/MacRumors-All/~4/gb9AYdpz8ro\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:17:12 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Tim Hardwick"
    },
    "rss:source": {
        "@": {
            "url": "http://www.macrumors.com/"
        },
        "#": "MacRumors: Mac News and Rumors - All Stories"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27975be2"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Minds Is the Anti-Facebook That Pays You For Your Time",
    "description": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?",
    "summary": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?",
    "date": "2018-04-19T14:16:15.000Z",
    "pubdate": "2018-04-19T14:16:15.000Z",
    "pubDate": "2018-04-19T14:16:15.000Z",
    "link": "https://www.wired.com/story/minds-anti-facebook",
    "guid": "http://www.inoreader.com/article/3a9c6e7e27c2f654",
    "author": "Louise Matsakis",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "WIRED",
        "url": "http://www.wired.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Minds Is the Anti-Facebook That Pays You For Your Time"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/minds-anti-facebook"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://media.wired.com/photos/5ad620c931a5843394302f02/master/pass/money-social-media-01%20(2).jpg\" alt=\"money-social-media-01%20(2).jpg\"></p>In the wake of privacy scandals, Facebook users are newly realizing their data makes the company rich. What if platforms paid them for their contributions?"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 14:16:15 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Louise Matsakis"
    },
    "rss:source": {
        "@": {
            "url": "http://www.wired.com/"
        },
        "#": "WIRED"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e27c2f654"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "How GrubHub Analyzed 4,000 Dishes to Predict Your Next Order",
    "description": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data.",
    "summary": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data.",
    "date": "2018-04-19T10:22:25.000Z",
    "pubdate": "2018-04-19T10:22:25.000Z",
    "pubDate": "2018-04-19T10:22:25.000Z",
    "link": "https://www.wired.com/story/how-grubhub-analyzed-4000-dishes-to-predict-your-next-order",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2bbb2272",
    "author": "Adam Rogers",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "WIRED",
        "url": "http://www.wired.com/"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "How GrubHub Analyzed 4,000 Dishes to Predict Your Next Order"
    },
    "rss:link": {
        "@": {},
        "#": "https://www.wired.com/story/how-grubhub-analyzed-4000-dishes-to-predict-your-next-order"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"https://media.wired.com/photos/5abec84dc6cd800b11522e76/master/pass/grubhub-142982629.jpg\" alt=\"grubhub-142982629.jpg\"></p>Online food-delivery service spent eight years resolving a classic problem of unstructured data."
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:25 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Adam Rogers"
    },
    "rss:source": {
        "@": {
            "url": "http://www.wired.com/"
        },
        "#": "WIRED"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2bbb2272"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track",
    "description": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">",
    "summary": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">",
    "date": "2018-04-19T10:22:18.000Z",
    "pubdate": "2018-04-19T10:22:18.000Z",
    "pubDate": "2018-04-19T10:22:18.000Z",
    "link": "http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2ba483d4",
    "author": "Ayun Halliday",
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Open Culture",
        "url": "http://www.openculture.com"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track"
    },
    "rss:link": {
        "@": {},
        "#": "http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html"
    },
    "rss:description": {
        "@": {},
        "#": "<div> \n<div> \n<p><a href=\"//www.youtube.com/watch?v=OrfgSUn3cXM\"><img src=\"http://img.youtube.com/vi/OrfgSUn3cXM/default.jpg\" width=\"320\" alt=\"default.jpg\"></a></p> \n</div> \n<p>\t \n</p></div> \n<p></p> \n<p><a href=\"https://www.rollingstone.com/music/artists/marvin-gaye/biography\">Marvin Gaye</a>‚Äôs mega-hit, \"<a href=\"https://www.rollingstone.com/music/lists/the-500-greatest-songs-of-all-time-20110407/marvin-gaye-i-heard-it-through-the-grapevine-20110526\">I Heard it Through the Grapevine</a>,\" turns 50 this year.</p> \n<p><a href=\"http://www.smokeyrobinson.com/\">Smokey Robinson</a> and <a href=\"https://gladysknight.com/\">Gladys Knight</a> got the first cracks at the now iconic <a href=\"http://classic.motown.com/artist/barrett-strong/\">Barrett Strong</a>-<a href=\"https://www.nytimes.com/2008/09/18/arts/music/18whitfield.html\">Norman Whitfield</a> tune, but Gaye‚Äôs 1968 rendition is the famous one, the bestselling Motown single of the decade.</p> \n<p>Gaye‚Äôs former brother-in-law, Motown Records founder¬†<a href=\"https://www.motownmuseum.org/story/berry-gordy/\">Berry Gordy</a>, is perhaps the only one who wasn‚Äôt impressed, refusing to believe it could be a viable single until its enthusiastic reception by radio DJs and the listening public convinced him otherwise. In short order, <em><a href=\"https://amzn.to/2JetFBw\">In The Groove</a></em>, the 1968 album on which it first appeared, was retitled with the name of its monster hit.</p> \n<p></p> \n \n<p>It‚Äôs given a considerable boost to <a href=\"https://www.youtube.com/watch?v=mkbA3E363So\">the dancing raisins,</a> Lawrence Kasdan‚Äôs film, <em><a href=\"https://www.youtube.com/watch?v=h0KbKONipqg\">The Big Chill,</a></em> and the many emerging talents who‚Äôve <a href=\"https://www.whosampled.com/Marvin-Gaye/I-Heard-It-Through-the-Grapevine/sampled/\">sampled the track</a> in the decades following the singer‚Äôs untimely death.</p> \n<p>Strip all that away.</p> \n<p></p> \n<p>For an even purer listening experience, strip away its famous orchestration,¬†described by <a href=\"http://entertainment.time.com/2011/10/24/the-all-time-100-songs/slide/i-heard-it-through-the-grapevine-marvin-gaye/\"><em>Time Magazine‚Äôs</em> Gilbert Cruz</a> as ‚Äú a single drum shot,‚Äù ‚Äúa dangerous-sounding electric-piano riff,‚Äù and ‚Äúa portentous tambourine rattle.‚Äù</p> \n<p>As author <a href=\"http://www.nelsongeorge.net/bio/\">Nelson George</a>, an historian of African American music, observed in his 1984 essay, \"<a href=\"https://thestacks.deadspin.com/marvin-gayes-abiding-unrest-1795371248\">Marvin Gaye's Abiding Unrest</a>\":</p> \n<p style=\"padding-left:30px;\"><em>In the ‚Äô60s Marvin bent his voice to the wishes of Motown, but he did so his way, vocally if not musically. He claimed he had three different voices, a falsetto, a gritty gospel shout, and a smooth midrange close to his speaking voice‚Ä¶. His version of ‚ÄúGrapevine‚Äù is so intense, so pretty, so goddamn black in spirit, it seems to catalogue that world of black male emotions Charles Fuller evokes in his insightful <a href=\"https://www.nytimes.com/2005/10/18/theater/reviews/anatomy-of-the-murder-of-a-black-sergeant.html\">Soldier‚Äôs Play</a>.¬†</em></p> \n<p>The superlatives that accompany Gaye‚Äôs 6th place ranking on <a href=\"https://www.rollingstone.com/music/lists/100-greatest-singers-of-all-time-19691231/marvin-gaye-20101202\"><em>Rolling Stone‚Äôs</em> 2010 list of the 100 Greatest Singers of All Time</a> speak to both the emotional power he brought to his work, as well as his ‚Äúbrilliant musicality‚Äù:</p> \n<p style=\"padding-left:30px;\"><i>These days we have Pro Tools and a thousand tracks, and you can do different vocals on every track. But back then you really had to innovate, like the way Marvin answered himself in songs, or all that really distant backing work, where his voice is all the way in the back and echoing. It's haunting; he delivered every single song with such clarity‚Ä¶</i></p> \n<p>Even ex-wife Janis Gaye had sweet words for that voice in a recent <a href=\"http://www.voicecouncil.com/marvin-gayes-vocal-connection/\">interview with <em>Voice Council</em> magazine</a>. Among the shocking revelations that got left out of her <a href=\"https://nypost.com/2015/05/03/marvin-gayes-wife-revealed-how-he-tortured-her/\">tell-all memoir</a> about their tempestuous relationship‚ÄîGaye was a primarily self-taught artist who smoked unfiltered Camels:</p> \n<p style=\"padding-left:30px;\"><i>‚Ä¶sometimes he would walk around like Pavarotti just to make the kids laugh. But, yes, he would also run through scales, drink tea with honey and lemon and little concoctions of cayenne pepper with vinegar and things like that. But he didn‚Äôt warm up before every performance.<br></i></p> \n<p>Listen to \"Let‚Äôs Get It On,\" \"Sexual Healing,\" and other isolated vocal tracks from <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">Marvin Gaye‚Äôs hit list</a> <a href=\"https://www.jambase.com/article/happy-birthday-marvin-gaye-isolated-vocal-tracks\">here</a>.</p> \n<p>via <a href=\"http://twistedsifter.com/videos/marvin-gaye-heard-it-through-the-grapevine-isolated-vocals-acapella/\">Twisted Sifter</a></p> \n<p><strong>Related Content:</strong></p> \n<p><a href=\"http://www.openculture.com/2017/08/hear-the-beach-boys-celestial-vocal-harmonies-in-four-isolated-tracks-from-pet-sounds.html\">Hear the Beach Boys‚Äô Angelic Vocal Harmonies in Four Isolated Tracks from Pet Sounds: ‚ÄúWouldn‚Äôt It Be Nice,‚Äù ‚ÄúGod Only Knows,‚Äù ‚ÄúSloop John B‚Äù &amp; ‚ÄúGood Vibrations‚Äù</a></p> \n<p><a href=\"http://www.openculture.com/2013/06/listen_to_freddie_mercury_and_david_bowie_on_the_isolated_vocal_track_for_the_queen_hit_under_pressure_1981.html\">Listen to Freddie Mercury and David Bowie on the Isolated Vocal Track for the Queen Hit ‚ÄòUnder Pressure,‚Äô 1981</a></p> \n<p><a href=\"http://www.openculture.com/2017/02/hear-a-4-hour-playlist-of-great-protest-songs.html\">Hear a 4 Hour Playlist of Great Protest Songs: Bob Dylan, Nina Simone, Bob Marley, Public Enemy, Billy Bragg &amp; More</a></p> \n<p><a href=\"http://ayunhalliday.com\"><i>Ayun Halliday </i></a><i>is an author, illustrator, theater maker and Chief Primatologist of </i><a href=\"http://ayunhalliday.com/the-east-village-inky/\"><i>the East Village Inky</i></a><i> zine.¬† Join her at the New York Society Library on April 23 for her monthly low-budget variety show, </i><a href=\"http://www.theater-of-the-apes.com/current-productions/necromancers-public-domain/\"><i>Necromancers of the Public Domain</i></a><i>.¬† Follow her </i><a href=\"https://twitter.com/ayunhalliday\"><i>@AyunHalliday</i></a><i>.</i></p> \n\n<p><a href=\"http://www.openculture.com/2018/04/hear-marvin-gaye-sing-i-heard-it-through-the-grapevine-a-capella.html\">Hear Marvin Gaye Sing ‚ÄúI Heard It Through the Grapevine‚Äù A Capella: The Haunting Isolated Vocal Track</a> is a post from: <a href=\"http://www.openculture.com\">Open Culture</a>. Follow us on <a href=\"https://www.facebook.com/openculture\">Facebook</a>, <a href=\"https://twitter.com/#!/openculture\">Twitter</a>, and <a href=\"https://plus.google.com/108579751001953501160/posts\">Google Plus</a>, or get our <a href=\"http://www.openculture.com/dailyemail\">Daily Email</a>. And don't miss our big collections of <a href=\"http://www.openculture.com/freeonlinecourses\">Free Online Courses</a>, <a href=\"http://www.openculture.com/freemoviesonline\">Free Online Movies</a>, <a href=\"http://www.openculture.com/free_ebooks\">Free eBooks</a>,¬†<a href=\"http://www.openculture.com/freeaudiobooks\">Free Audio Books</a>, <a href=\"http://www.openculture.com/freelanguagelessons\">Free Foreign Language Lessons</a>, and <a href=\"http://www.openculture.com/free_certificate_courses\">MOOCs</a>.</p> \n<div> \n<a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=yIl2AUoC8zA\" alt=\"OpenCulture?d=yIl2AUoC8zA\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_sGLiPBpWU\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:V_\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gIN9vFwOqvQ\" alt=\"OpenCulture?i=8L8bf6d-CzI:jEWuEVHMlaI:gI\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=qj6IDK7rITs\" alt=\"OpenCulture?d=qj6IDK7rITs\"></a> <a href=\"http://feeds.feedburner.com/~ff/OpenCulture?a=8L8bf6d-CzI:jEWuEVHMlaI:I9og5sOYxJI\"><img src=\"http://feeds.feedburner.com/~ff/OpenCulture?d=I9og5sOYxJI\" alt=\"OpenCulture?d=I9og5sOYxJI\"></a> \n</div><img src=\"http://feeds.feedburner.com/~r/OpenCulture/~4/8L8bf6d-CzI\" height=\"1\" width=\"1\" alt=\"\">"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:18 +0000"
    },
    "dc:creator": {
        "@": {},
        "#": "Ayun Halliday"
    },
    "rss:source": {
        "@": {
            "url": "http://www.openculture.com"
        },
        "#": "Open Culture"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2ba483d4"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}{
    "title": "The Future of Ideas",
    "description": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>",
    "summary": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>",
    "date": "2018-04-19T10:22:11.000Z",
    "pubdate": "2018-04-19T10:22:11.000Z",
    "pubDate": "2018-04-19T10:22:11.000Z",
    "link": "http://kk.org/cooltools/the-future-of-i/",
    "guid": "http://www.inoreader.com/article/3a9c6e7e2ba75031",
    "author": null,
    "comments": null,
    "origlink": null,
    "image": {},
    "source": {
        "title": "Cool Tools",
        "url": "http://kk.org/cooltools"
    },
    "categories": [],
    "enclosures": [],
    "rss:@": {},
    "rss:title": {
        "@": {},
        "#": "The Future of Ideas"
    },
    "rss:link": {
        "@": {},
        "#": "http://kk.org/cooltools/the-future-of-i/"
    },
    "rss:description": {
        "@": {},
        "#": "<p><img src=\"http://kk.org/cooltools/wp-content/archiveimages/archives/future_of_ideas.jpg\" alt=\"future_of_ideas.jpg\"></p><p><a href=\"http://www.amazon.com/exec/obidos/ASIN/0375726446/cooltools-20\">The Future of Ideas</a> is the book most often recommended to me in the past year [this is a review from 2004 ‚Äì MF]. It is very important because Lessig articulates the central reason the web has succeeded ‚Äì its root as a commons ‚Äì and proceeds to dissect the problems threatening this commons, and suggests remedies and laws that would protect and nourish it. It is brilliant work, long overdue. </p> \n<div></div><div></div><div></div><span></span><p>Sample Excerpts:</p><p></p><p>As I will argue, in the digital world, all the stuff protected by copyright law is in one sense the same: It all depends fundamentally upon a rich and diverse public domain. Free content, in other words, is crucial to building and supporting new content. The free content among the ‚Äúwired‚Äù is just a particular example of a more general point. </p> \n<p>*</p> \n<p>This is a hard fact for lawyers to understand (protected as they are by exclusionary rules such as the bar exam), but most of production in our society occurs without any guarantee of government protection. Starbucks didn‚Äôt get a government monopoly before it risked a great deal of capital to open coffee shops around the world. All it was assured was that people would have to pay for the coffee they sold; the idea of a high-quality coffee shop was free for others to take. Similarly, chip fabricators around the world invest billions in chip production plants, with no assurance from the government that another competitor won‚Äôt open a competing plant right next door. </p> \n<p>*</p> \n<p>Commons may be rare. They may evoke tragedies. They may be hard to sustain. And at times, they certainly may interfere with the efficient use of important resources. </p> \n<p>But commons also produce something of value. They are a resource for decentralized innovation. They create the opportunity for individuals to draw upon resources without connections, permission, or access granted by others. They are environments that commit themselves to being open. Individuals and  corporations draw upon the value created by this openness. They transform that value into other value, which they then consume privately. </p> \n<p>*</p> \n<p>Contrast this with computer networks. The most striking feature of the early history of the Internet is the repeated assertion by those at its founding that they simply didn‚Äôt know what the network would be used for. Here they were building this large-scale computer network, with a large number of resources devoted to it, but none of them had a clear idea of the uses to which this network would be put. Many in the 1980s believed the Internet would be a fair substitute for telephones (they of course were wrong); none had any idea of the potential for many-to-many publishing that the World Wide Web would produce. </p> \n<p>Where we have little understanding about how a resource will be used, we have more reason to keep that resource in the commons. </p> \n<p>*</p> \n<p>To the extent you view Napster as nothing more than a device for facilitating the theft of content, there is little usefulness in the new mode of distribution. But the extraordinary feature of Napster was not so much the ability to steal content as it is the range of content that Napster makes available. The important fact is not that a user can get Madonna‚Äôs latest songs for free; it is that one can find a recording of new Orleans jazz drummer Jason Marsalis‚Äôs band playing ‚ÄúThere‚Äôs a Thing Called Rhythm.‚Äù</p> \n<p>*</p> \n<p>But in light of the emerging technologies for sharing, even the spectrum sold as property would be subject to an important qualification: Other users would be free to ‚Äúshare‚Äù that spectrum if they followed a ‚Äúlisten first‚Äù  protocol ‚Äì the technology would listen to see whether a certain chunk of the spectrum were being used at a particular time, and if it weren‚Äôt, it would be free for the taking. </p> \n<p>I recognize that idea is jarring ‚Äì that ‚Äúmy property‚Äù would be free for the taking just because I was not using it. But do you recognize why the idea is jarring? The assumption that fuels the dissonance about property ‚Äúfree for the taking‚Äù is that the taken property is exhaustible. I may not be using my car at the moment, but that doesn‚Äôt mean you should have the right to take it since your use of my care will, to some degree, deplete the property I have. Cars are exhaustible resources. Spectrum is not.  When I use a bit of spectrum at a particular moment in time, that spectrum is just as good after I‚Äôm finished as it was before. My use in no way exhausts the resource. And more important, when spectrum is not used, its value as a resource is not saved. Unused spectrum, like an empty seat on an airplane, is a resource that is lost forever. </p> \n<p>And pollution is precisely the way we should think about old uses of spectrum: large and stupid towers billow overly powerful broadcasts into the ether,  making it impossible for smaller, quieter, more efficient uses of spectrum to flourish. Why should these smokestack technologies get protection, when the steel mills did not? Why  not force them to improve their technology ‚Äì to reduce the pollution they spew forth into the ether ‚Äì so that others could innovate in yet unimagined ways?</p> \n<div></div><div></div><div></div><span></span>"
    },
    "rss:pubdate": {
        "@": {},
        "#": "Thu, 19 Apr 2018 10:22:11 +0000"
    },
    "dc:creator": {
        "@": {}
    },
    "rss:source": {
        "@": {
            "url": "http://kk.org/cooltools"
        },
        "#": "Cool Tools"
    },
    "rss:guid": {
        "@": {
            "ispermalink": "false"
        },
        "#": "http://www.inoreader.com/article/3a9c6e7e2ba75031"
    },
    "meta": {
        "#ns": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "@": [
            {
                "xmlns:atom": "http://www.w3.org/2005/Atom"
            },
            {
                "xmlns:dc": "http://purl.org/dc/elements/1.1/"
            }
        ],
        "#xml": {
            "version": "1.0",
            "encoding": "utf-8"
        },
        "#type": "rss",
        "#version": "2.0",
        "title": "Frank Meeuwsen's favorite articles on Inoreader",
        "description": null,
        "date": "2018-04-21T13:21:07.000Z",
        "pubdate": "2018-04-21T13:21:07.000Z",
        "pubDate": "2018-04-21T13:21:07.000Z",
        "link": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html",
        "xmlurl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "xmlUrl": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
        "author": null,
        "language": "en-US",
        "favicon": null,
        "copyright": null,
        "generator": "Inoreader (https://www.inoreader.com)",
        "cloud": {
            "type": "hub",
            "href": "http://inoreader.superfeedr.com/"
        },
        "image": {},
        "categories": [],
        "rss:@": {},
        "rss:title": {
            "@": {},
            "#": "Frank Meeuwsen's favorite articles on Inoreader"
        },
        "rss:link": {
            "@": {},
            "#": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites/view/html"
        },
        "rss:description": {
            "@": {}
        },
        "atom:link": [
            {
                "@": {
                    "href": "https://www.inoreader.com/stream/user/1006530244/tag/user-favorites",
                    "rel": "self",
                    "type": "application/rss+xml"
                }
            },
            {
                "@": {
                    "href": "http://inoreader.superfeedr.com/",
                    "rel": "hub"
                }
            }
        ],
        "rss:generator": {
            "@": {},
            "#": "Inoreader (https://www.inoreader.com)"
        },
        "rss:pubdate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:lastbuilddate": {
            "@": {},
            "#": "Sat, 21 Apr 2018 13:21:07 +0000"
        },
        "rss:language": {
            "@": {},
            "#": "en-US"
        }
    }
}